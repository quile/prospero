#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@wardley.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2006 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
# REVISION
#   $Id$
#
# IMPORTANT NOTE
#   This module is constructed from the parser/Grammar.pm.skel file by
#   running the parser/yc script.  You only need to do this if # you
#   have modified the grammar in the parser/Parser.yp file and need #
#   to-recompile it.  See the README in the 'parser' directory for
#   more information (sub-directory of the Template distribution).
#
#========================================================================

package Prospero::Plugin::TT2::Grammar;

use strict;
use warnings;

our $VERSION  = 2.25;

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================

# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw(
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META IN
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR VIEW DEBUG
    BINDING AROUND BIND
    );

# for historical reasons, != and == are converted to ne and eq to perform
# stringwise comparison (mainly because it doesn't generate "non-numerical
# comparison" warnings which != and == can) but the others (e.g. < > <= >=)
# are not converted to their stringwise equivalents.  I added 'gt' et al,
# briefly for v2.04d and then took them out again in 2.04e.


%CMPOP = qw(
    != ne
    == eq
    <  <
    >  >
    >= >=
    <= <=
);

#    eq eq  # add these lines to the above to
#    lt lt  # enable the eq, lt and gt operators
#    gt gt

#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '_'       => 'CAT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case,
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{
#    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @tokens = qw< ( ) [ ] { } ${ $ + / ; : ? >;
    my @cmpop  = keys %CMPOP;
#    my @binop  = qw( + - * % );              # '/' above, in @tokens
    my @binop  = qw( - * % );              # '+' and '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens }
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'template' => 53,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'try' => 36,
			'switch' => 35,
			'directive' => 74,
			'block' => 75,
			'condition' => 76
		}
	},
	{#State 1
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'setlist' => 79,
			'item' => 40,
			'assign' => 20,
			'node' => 24,
			'ident' => 77
		}
	},
	{#State 2
		DEFAULT => -137
	},
	{#State 3
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 82,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 4
		DEFAULT => -23
	},
	{#State 5
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 92,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 6
		ACTIONS => {
			";" => 94
		}
	},
	{#State 7
		DEFAULT => -38
	},
	{#State 8
		DEFAULT => -14
	},
	{#State 9
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 95,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 10
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"]" => 98,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 100,
			'item' => 40,
			'range' => 97,
			'node' => 24,
			'ident' => 80,
			'term' => 99,
			'lterm' => 58,
			'list' => 96
		}
	},
	{#State 11
		ACTIONS => {
			";" => 101
		}
	},
	{#State 12
		DEFAULT => -5
	},
	{#State 13
		ACTIONS => {
			";" => -20
		},
		DEFAULT => -28
	},
	{#State 14
		DEFAULT => -85,
		GOTOS => {
			'@7-1' => 102
		}
	},
	{#State 15
		ACTIONS => {
			'IDENT' => 103
		},
		DEFAULT => -94,
		GOTOS => {
			'blockargs' => 106,
			'metadata' => 105,
			'meta' => 104
		}
	},
	{#State 16
		ACTIONS => {
			'IDENT' => 103
		},
		GOTOS => {
			'metadata' => 107,
			'meta' => 104
		}
	},
	{#State 17
		ACTIONS => {
			'DOT' => 108,
			'ASSIGN' => 109
		},
		DEFAULT => -116
	},
	{#State 18
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 110,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 19
		ACTIONS => {
			'IDENT' => 111
		}
	},
	{#State 20
		DEFAULT => -156
	},
	{#State 21
		DEFAULT => -12
	},
	{#State 22
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 112,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 40,
			'loopvar' => 114,
			'node' => 24,
			'ident' => 80,
			'term' => 113,
			'lterm' => 58
		}
	},
	{#State 23
		DEFAULT => -41
	},
	{#State 24
		DEFAULT => -134
	},
	{#State 25
		DEFAULT => -6
	},
	{#State 26
		ACTIONS => {
			"\"" => 121,
			"\$" => 118,
			'LITERAL' => 120,
			'FILENAME' => 85,
			'IDENT' => 115,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 116,
			'item' => 117,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 122,
			'lnameargs' => 119
		}
	},
	{#State 27
		DEFAULT => -120
	},
	{#State 28
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 123
		}
	},
	{#State 29
		ACTIONS => {
			'LITERAL' => 128,
			'FILENAME' => 85,
			'IDENT' => 124,
			'NUMBER' => 86
		},
		DEFAULT => -94,
		GOTOS => {
			'blockargs' => 127,
			'filepart' => 89,
			'filename' => 126,
			'blockname' => 125,
			'metadata' => 105,
			'meta' => 104
		}
	},
	{#State 30
		DEFAULT => -44
	},
	{#State 31
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 133,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -126,
		GOTOS => {
			'params' => 132,
			'hash' => 129,
			'item' => 130,
			'param' => 131
		}
	},
	{#State 32
		DEFAULT => -26
	},
	{#State 33
		ACTIONS => {
			"\"" => 121,
			"\$" => 118,
			'LITERAL' => 120,
			'FILENAME' => 85,
			'IDENT' => 115,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 116,
			'item' => 117,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 122,
			'lnameargs' => 134
		}
	},
	{#State 34
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -2,
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 135,
			'defblock' => 68,
			'atomdir' => 13,
			'anonblock' => 51,
			'sterm' => 71,
			'defblockname' => 15,
			'filter' => 30,
			'bind' => 54,
			'ident' => 17,
			'perl' => 32,
			'setlist' => 73,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 74,
			'macro' => 21,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 35
		DEFAULT => -22
	},
	{#State 36
		DEFAULT => -25
	},
	{#State 37
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 136,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 38
		ACTIONS => {
			"\"" => 62,
			"\$" => 44,
			'LITERAL' => 81,
			'IDENT' => 2,
			'REF' => 28,
			'NUMBER' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 137,
			'item' => 40,
			'node' => 24,
			'ident' => 80
		}
	},
	{#State 39
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 138,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 40
		ACTIONS => {
			"(" => 139
		},
		DEFAULT => -135
	},
	{#State 41
		ACTIONS => {
			";" => 140
		}
	},
	{#State 42
		DEFAULT => -39
	},
	{#State 43
		DEFAULT => -11
	},
	{#State 44
		ACTIONS => {
			'IDENT' => 141
		}
	},
	{#State 45
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 142,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 46
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 143,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 47
		DEFAULT => -43
	},
	{#State 48
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 144,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 49
		ACTIONS => {
			'IF' => 148,
			'FILTER' => 147,
			'FOR' => 146,
			'WHILE' => 150,
			'WRAPPER' => 149,
			'UNLESS' => 145
		}
	},
	{#State 50
		DEFAULT => -40
	},
	{#State 51
		DEFAULT => -10
	},
	{#State 52
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 151,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 53
		ACTIONS => {
			'' => 152
		}
	},
	{#State 54
		DEFAULT => -24
	},
	{#State 55
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 59,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 155,
			'sterm' => 71,
			'item' => 40,
			'assign' => 154,
			'node' => 24,
			'ident' => 153,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 56
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 156,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 57
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 157,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 58
		DEFAULT => -110
	},
	{#State 59
		ACTIONS => {
			'ASSIGN' => 158
		},
		DEFAULT => -119
	},
	{#State 60
		DEFAULT => -153
	},
	{#State 61
		DEFAULT => -15
	},
	{#State 62
		DEFAULT => -183,
		GOTOS => {
			'quoted' => 159
		}
	},
	{#State 63
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 160,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 64
		ACTIONS => {
			";" => -16,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -27
	},
	{#State 65
		DEFAULT => -13
	},
	{#State 66
		DEFAULT => -37
	},
	{#State 67
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 171,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 68
		DEFAULT => -9
	},
	{#State 69
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 172,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 70
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 173,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 71
		DEFAULT => -111
	},
	{#State 72
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'setlist' => 174,
			'item' => 40,
			'assign' => 20,
			'node' => 24,
			'ident' => 77
		}
	},
	{#State 73
		ACTIONS => {
			"\$" => 44,
			'COMMA' => 176,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -19,
		GOTOS => {
			'item' => 40,
			'assign' => 175,
			'node' => 24,
			'ident' => 77
		}
	},
	{#State 74
		DEFAULT => -8
	},
	{#State 75
		DEFAULT => -1
	},
	{#State 76
		DEFAULT => -21
	},
	{#State 77
		ACTIONS => {
			'ASSIGN' => 177,
			'DOT' => 108
		}
	},
	{#State 78
		ACTIONS => {
			'ASSIGN' => 158
		}
	},
	{#State 79
		ACTIONS => {
			'COMMA' => 176,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\$" => 44,
			"\${" => 38
		},
		DEFAULT => -31,
		GOTOS => {
			'item' => 40,
			'assign' => 175,
			'node' => 24,
			'ident' => 77
		}
	},
	{#State 80
		ACTIONS => {
			'DOT' => 108
		},
		DEFAULT => -116
	},
	{#State 81
		DEFAULT => -119
	},
	{#State 82
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 178,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 83
		DEFAULT => -180
	},
	{#State 84
		DEFAULT => -173
	},
	{#State 85
		DEFAULT => -179
	},
	{#State 86
		DEFAULT => -181
	},
	{#State 87
		ACTIONS => {
			'DOT' => 179
		},
		DEFAULT => -175
	},
	{#State 88
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 180
		}
	},
	{#State 89
		DEFAULT => -178
	},
	{#State 90
		DEFAULT => -176
	},
	{#State 91
		DEFAULT => -183,
		GOTOS => {
			'quoted' => 181
		}
	},
	{#State 92
		ACTIONS => {
			'AROUND' => 182
		},
		DEFAULT => -68
	},
	{#State 93
		ACTIONS => {
			"+" => 183,
			"(" => 184
		},
		DEFAULT => -163,
		GOTOS => {
			'args' => 185
		}
	},
	{#State 94
		DEFAULT => -7
	},
	{#State 95
		DEFAULT => -36
	},
	{#State 96
		ACTIONS => {
			"{" => 31,
			'COMMA' => 188,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"]" => 186,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 187,
			'lterm' => 58
		}
	},
	{#State 97
		ACTIONS => {
			"]" => 189
		}
	},
	{#State 98
		DEFAULT => -114
	},
	{#State 99
		DEFAULT => -123
	},
	{#State 100
		ACTIONS => {
			'TO' => 190
		},
		DEFAULT => -111
	},
	{#State 101
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 191,
			'condition' => 76
		}
	},
	{#State 102
		ACTIONS => {
			";" => 192
		}
	},
	{#State 103
		ACTIONS => {
			'ASSIGN' => 193
		}
	},
	{#State 104
		DEFAULT => -106
	},
	{#State 105
		ACTIONS => {
			'COMMA' => 195,
			'IDENT' => 103
		},
		DEFAULT => -93,
		GOTOS => {
			'meta' => 194
		}
	},
	{#State 106
		ACTIONS => {
			";" => 196
		}
	},
	{#State 107
		ACTIONS => {
			'COMMA' => 195,
			'IDENT' => 103
		},
		DEFAULT => -17,
		GOTOS => {
			'meta' => 194
		}
	},
	{#State 108
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			'NUMBER' => 198,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 197
		}
	},
	{#State 109
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 22,
			'NEXT' => 23,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 199,
			'DEFAULT' => 72,
			"{" => 31,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'term' => 60,
			'loop' => 4,
			'expr' => 201,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 13,
			'mdir' => 200,
			'sterm' => 71,
			'filter' => 30,
			'bind' => 54,
			'ident' => 153,
			'perl' => 32,
			'setlist' => 73,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 202,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 110
		DEFAULT => -34
	},
	{#State 111
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 18,
			"(" => 204,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 22,
			'NEXT' => 23,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 199,
			'DEFAULT' => 72,
			"{" => 31,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'term' => 60,
			'loop' => 4,
			'expr' => 205,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 13,
			'mdir' => 203,
			'sterm' => 71,
			'filter' => 30,
			'bind' => 54,
			'ident' => 153,
			'perl' => 32,
			'setlist' => 73,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 202,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 112
		ACTIONS => {
			'IN' => 207,
			'ASSIGN' => 206
		},
		DEFAULT => -137
	},
	{#State 113
		DEFAULT => -163,
		GOTOS => {
			'args' => 208
		}
	},
	{#State 114
		ACTIONS => {
			";" => 209
		}
	},
	{#State 115
		ACTIONS => {
			'ASSIGN' => -137
		},
		DEFAULT => -180
	},
	{#State 116
		ACTIONS => {
			'ASSIGN' => 210
		}
	},
	{#State 117
		DEFAULT => -166
	},
	{#State 118
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 211,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 180
		}
	},
	{#State 119
		ACTIONS => {
			";" => 212
		}
	},
	{#State 120
		ACTIONS => {
			'ASSIGN' => -168
		},
		DEFAULT => -176
	},
	{#State 121
		DEFAULT => -183,
		GOTOS => {
			'quoted' => 213
		}
	},
	{#State 122
		DEFAULT => -165
	},
	{#State 123
		ACTIONS => {
			'DOT' => 108
		},
		DEFAULT => -117
	},
	{#State 124
		ACTIONS => {
			'ASSIGN' => 193
		},
		DEFAULT => -180
	},
	{#State 125
		DEFAULT => -90
	},
	{#State 126
		ACTIONS => {
			'DOT' => 179
		},
		DEFAULT => -91
	},
	{#State 127
		ACTIONS => {
			";" => 214
		}
	},
	{#State 128
		DEFAULT => -92
	},
	{#State 129
		ACTIONS => {
			"}" => 215
		}
	},
	{#State 130
		ACTIONS => {
			'ASSIGN' => 216
		}
	},
	{#State 131
		DEFAULT => -129
	},
	{#State 132
		ACTIONS => {
			"\$" => 44,
			'COMMA' => 218,
			'LITERAL' => 133,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -125,
		GOTOS => {
			'item' => 130,
			'param' => 217
		}
	},
	{#State 133
		ACTIONS => {
			'ASSIGN' => 219
		}
	},
	{#State 134
		DEFAULT => -80
	},
	{#State 135
		DEFAULT => -4
	},
	{#State 136
		ACTIONS => {
			";" => 220
		}
	},
	{#State 137
		ACTIONS => {
			"}" => 221
		}
	},
	{#State 138
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -149
	},
	{#State 139
		DEFAULT => -163,
		GOTOS => {
			'args' => 222
		}
	},
	{#State 140
		DEFAULT => -83,
		GOTOS => {
			'@6-2' => 223
		}
	},
	{#State 141
		DEFAULT => -139
	},
	{#State 142
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 224,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 143
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -30
	},
	{#State 144
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -29
	},
	{#State 145
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 225,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 146
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 112,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 40,
			'loopvar' => 226,
			'node' => 24,
			'ident' => 80,
			'term' => 113,
			'lterm' => 58
		}
	},
	{#State 147
		ACTIONS => {
			"\"" => 121,
			"\$" => 118,
			'LITERAL' => 120,
			'FILENAME' => 85,
			'IDENT' => 115,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 116,
			'item' => 117,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 122,
			'lnameargs' => 227
		}
	},
	{#State 148
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 228,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 149
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 229,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 150
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 230,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 151
		DEFAULT => -42
	},
	{#State 152
		DEFAULT => 0
	},
	{#State 153
		ACTIONS => {
			'DOT' => 108,
			'ASSIGN' => 177
		},
		DEFAULT => -116
	},
	{#State 154
		ACTIONS => {
			")" => 231
		}
	},
	{#State 155
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			")" => 232,
			'OR' => 166
		}
	},
	{#State 156
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 233,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 157
		ACTIONS => {
			";" => 234
		}
	},
	{#State 158
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 235,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 159
		ACTIONS => {
			"\"" => 240,
			'TEXT' => 237,
			";" => 239,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 236,
			'quotable' => 238
		}
	},
	{#State 160
		DEFAULT => -35
	},
	{#State 161
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 241,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 162
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 242,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 163
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 243,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 164
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 244,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 165
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 245,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 166
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 246,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 167
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 247,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 168
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 248,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 169
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 249,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 170
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 250,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 171
		DEFAULT => -33
	},
	{#State 172
		ACTIONS => {
			'AROUND' => 251
		},
		DEFAULT => -65
	},
	{#State 173
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 252,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 174
		ACTIONS => {
			'COMMA' => 176,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\$" => 44,
			"\${" => 38
		},
		DEFAULT => -32,
		GOTOS => {
			'item' => 40,
			'assign' => 175,
			'node' => 24,
			'ident' => 77
		}
	},
	{#State 175
		DEFAULT => -154
	},
	{#State 176
		DEFAULT => -155
	},
	{#State 177
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 253,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 178
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 254,
			'condition' => 76
		}
	},
	{#State 179
		ACTIONS => {
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 255
		}
	},
	{#State 180
		ACTIONS => {
			'DOT' => 108
		},
		DEFAULT => -163,
		GOTOS => {
			'args' => 256
		}
	},
	{#State 181
		ACTIONS => {
			"\"" => 257,
			'TEXT' => 237,
			";" => 239,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 236,
			'quotable' => 238
		}
	},
	{#State 182
		ACTIONS => {
			";" => 258
		}
	},
	{#State 183
		ACTIONS => {
			"\"" => 91,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'filename' => 87,
			'name' => 259
		}
	},
	{#State 184
		DEFAULT => -163,
		GOTOS => {
			'args' => 260
		}
	},
	{#State 185
		ACTIONS => {
			'NOT' => 39,
			'LITERAL' => 264,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"{" => 31,
			'COMMA' => 266,
			"(" => 55,
			"\${" => 38
		},
		DEFAULT => -170,
		GOTOS => {
			'expr' => 265,
			'sterm' => 71,
			'item' => 262,
			'param' => 263,
			'node' => 24,
			'ident' => 261,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 186
		DEFAULT => -112
	},
	{#State 187
		DEFAULT => -121
	},
	{#State 188
		DEFAULT => -122
	},
	{#State 189
		DEFAULT => -113
	},
	{#State 190
		ACTIONS => {
			"\"" => 62,
			"\$" => 44,
			'LITERAL' => 81,
			'IDENT' => 2,
			'REF' => 28,
			'NUMBER' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 267,
			'item' => 40,
			'node' => 24,
			'ident' => 80
		}
	},
	{#State 191
		ACTIONS => {
			'FINAL' => 268,
			'CATCH' => 270
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 269
		}
	},
	{#State 192
		ACTIONS => {
			'TEXT' => 271
		}
	},
	{#State 193
		ACTIONS => {
			"\"" => 274,
			'LITERAL' => 273,
			'NUMBER' => 272
		}
	},
	{#State 194
		DEFAULT => -104
	},
	{#State 195
		DEFAULT => -105
	},
	{#State 196
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'template' => 275,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 75,
			'condition' => 76
		}
	},
	{#State 197
		DEFAULT => -132
	},
	{#State 198
		DEFAULT => -133
	},
	{#State 199
		ACTIONS => {
			";" => 276
		}
	},
	{#State 200
		DEFAULT => -96
	},
	{#State 201
		ACTIONS => {
			";" => -157,
			"+" => 161,
			'LITERAL' => -157,
			'IDENT' => -157,
			'CAT' => 167,
			"\$" => -157,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			'COMMA' => -157,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"\${" => -157
		},
		DEFAULT => -27
	},
	{#State 202
		DEFAULT => -99
	},
	{#State 203
		DEFAULT => -98
	},
	{#State 204
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 59,
			'IDENT' => 277,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 155,
			'sterm' => 71,
			'item' => 40,
			'assign' => 154,
			'margs' => 278,
			'node' => 24,
			'ident' => 153,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 205
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -27
	},
	{#State 206
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 279,
			'lterm' => 58
		}
	},
	{#State 207
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 280,
			'lterm' => 58
		}
	},
	{#State 208
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'COMMA' => 266,
			'LITERAL' => 264,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		DEFAULT => -71,
		GOTOS => {
			'expr' => 265,
			'sterm' => 71,
			'item' => 262,
			'param' => 263,
			'node' => 24,
			'ident' => 261,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 209
		DEFAULT => -57,
		GOTOS => {
			'@1-3' => 281
		}
	},
	{#State 210
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 282,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 211
		ACTIONS => {
			'ASSIGN' => -139
		},
		DEFAULT => -137
	},
	{#State 212
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 283,
			'condition' => 76
		}
	},
	{#State 213
		ACTIONS => {
			"\"" => 284,
			'TEXT' => 237,
			";" => 239,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 236,
			'quotable' => 238
		}
	},
	{#State 214
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 285,
			'condition' => 76
		}
	},
	{#State 215
		DEFAULT => -115
	},
	{#State 216
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 286,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 217
		DEFAULT => -127
	},
	{#State 218
		DEFAULT => -128
	},
	{#State 219
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 287,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 220
		DEFAULT => -81,
		GOTOS => {
			'@5-3' => 288
		}
	},
	{#State 221
		DEFAULT => -138
	},
	{#State 222
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'COMMA' => 266,
			'LITERAL' => 264,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			")" => 289,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 265,
			'sterm' => 71,
			'item' => 262,
			'param' => 263,
			'node' => 24,
			'ident' => 261,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 223
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 290,
			'condition' => 76
		}
	},
	{#State 224
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 291,
			'condition' => 76
		}
	},
	{#State 225
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -48
	},
	{#State 226
		DEFAULT => -59
	},
	{#State 227
		DEFAULT => -88
	},
	{#State 228
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -46
	},
	{#State 229
		DEFAULT => -73
	},
	{#State 230
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -62
	},
	{#State 231
		DEFAULT => -151
	},
	{#State 232
		DEFAULT => -152
	},
	{#State 233
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 292,
			'condition' => 76
		}
	},
	{#State 234
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 293,
			'condition' => 76
		}
	},
	{#State 235
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -158
	},
	{#State 236
		ACTIONS => {
			'DOT' => 108
		},
		DEFAULT => -184
	},
	{#State 237
		DEFAULT => -185
	},
	{#State 238
		DEFAULT => -182
	},
	{#State 239
		DEFAULT => -186
	},
	{#State 240
		DEFAULT => -118
	},
	{#State 241
		ACTIONS => {
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -142
	},
	{#State 242
		ACTIONS => {
			":" => 294,
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 243
		ACTIONS => {
			'MOD' => 169
		},
		DEFAULT => -143
	},
	{#State 244
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -147
	},
	{#State 245
		ACTIONS => {
			'DIV' => 163,
			"+" => 161,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -140
	},
	{#State 246
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -148
	},
	{#State 247
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -146
	},
	{#State 248
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -145
	},
	{#State 249
		DEFAULT => -144
	},
	{#State 250
		ACTIONS => {
			'DIV' => 163,
			'MOD' => 169
		},
		DEFAULT => -141
	},
	{#State 251
		ACTIONS => {
			";" => 295
		}
	},
	{#State 252
		DEFAULT => -60,
		GOTOS => {
			'@2-3' => 296
		}
	},
	{#State 253
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -157
	},
	{#State 254
		ACTIONS => {
			'ELSIF' => 299,
			'ELSE' => 297
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 298
		}
	},
	{#State 255
		DEFAULT => -177
	},
	{#State 256
		ACTIONS => {
			'NOT' => 39,
			'LITERAL' => 264,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"{" => 31,
			'COMMA' => 266,
			"(" => 55,
			"\${" => 38
		},
		DEFAULT => -169,
		GOTOS => {
			'expr' => 265,
			'sterm' => 71,
			'item' => 262,
			'param' => 263,
			'node' => 24,
			'ident' => 261,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 257
		DEFAULT => -174
	},
	{#State 258
		DEFAULT => -66,
		GOTOS => {
			'@4-4' => 300
		}
	},
	{#State 259
		DEFAULT => -172
	},
	{#State 260
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'COMMA' => 266,
			'LITERAL' => 264,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			")" => 301,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 265,
			'sterm' => 71,
			'item' => 262,
			'param' => 263,
			'node' => 24,
			'ident' => 261,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 261
		ACTIONS => {
			'DOT' => 108,
			'ASSIGN' => 302
		},
		DEFAULT => -116
	},
	{#State 262
		ACTIONS => {
			"(" => 139,
			'ASSIGN' => 216
		},
		DEFAULT => -135
	},
	{#State 263
		DEFAULT => -160
	},
	{#State 264
		ACTIONS => {
			'ASSIGN' => 219
		},
		DEFAULT => -119
	},
	{#State 265
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -159
	},
	{#State 266
		DEFAULT => -162
	},
	{#State 267
		DEFAULT => -124
	},
	{#State 268
		ACTIONS => {
			";" => 303
		}
	},
	{#State 269
		ACTIONS => {
			'END' => 304
		}
	},
	{#State 270
		ACTIONS => {
			";" => 306,
			'DEFAULT' => 307,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'filename' => 305
		}
	},
	{#State 271
		ACTIONS => {
			'END' => 308
		}
	},
	{#State 272
		DEFAULT => -109
	},
	{#State 273
		DEFAULT => -107
	},
	{#State 274
		ACTIONS => {
			'TEXT' => 309
		}
	},
	{#State 275
		ACTIONS => {
			'END' => 310
		}
	},
	{#State 276
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 311,
			'condition' => 76
		}
	},
	{#State 277
		ACTIONS => {
			'IDENT' => -103,
			")" => -103,
			'COMMA' => -103
		},
		DEFAULT => -137
	},
	{#State 278
		ACTIONS => {
			'COMMA' => 314,
			'IDENT' => 312,
			")" => 313
		}
	},
	{#State 279
		DEFAULT => -163,
		GOTOS => {
			'args' => 315
		}
	},
	{#State 280
		DEFAULT => -163,
		GOTOS => {
			'args' => 316
		}
	},
	{#State 281
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 317,
			'condition' => 76
		}
	},
	{#State 282
		DEFAULT => -164
	},
	{#State 283
		ACTIONS => {
			'END' => 318
		}
	},
	{#State 284
		ACTIONS => {
			'ASSIGN' => -167
		},
		DEFAULT => -174
	},
	{#State 285
		ACTIONS => {
			'END' => 319
		}
	},
	{#State 286
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -131
	},
	{#State 287
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -130
	},
	{#State 288
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 320,
			'condition' => 76
		}
	},
	{#State 289
		DEFAULT => -136
	},
	{#State 290
		ACTIONS => {
			'END' => 321
		}
	},
	{#State 291
		ACTIONS => {
			'ELSIF' => 299,
			'ELSE' => 297
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 322
		}
	},
	{#State 292
		ACTIONS => {
			'CASE' => 323
		},
		DEFAULT => -56,
		GOTOS => {
			'case' => 324
		}
	},
	{#State 293
		ACTIONS => {
			'END' => 325
		}
	},
	{#State 294
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 326,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 295
		DEFAULT => -63,
		GOTOS => {
			'@3-4' => 327
		}
	},
	{#State 296
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 328,
			'condition' => 76
		}
	},
	{#State 297
		ACTIONS => {
			";" => 329
		}
	},
	{#State 298
		ACTIONS => {
			'END' => 330
		}
	},
	{#State 299
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 331,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 300
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 332,
			'condition' => 76
		}
	},
	{#State 301
		DEFAULT => -171
	},
	{#State 302
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 333,
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 303
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 334,
			'condition' => 76
		}
	},
	{#State 304
		DEFAULT => -74
	},
	{#State 305
		ACTIONS => {
			'DOT' => 179,
			";" => 335
		}
	},
	{#State 306
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 336,
			'condition' => 76
		}
	},
	{#State 307
		ACTIONS => {
			";" => 337
		}
	},
	{#State 308
		DEFAULT => -86
	},
	{#State 309
		ACTIONS => {
			"\"" => 338
		}
	},
	{#State 310
		DEFAULT => -89
	},
	{#State 311
		ACTIONS => {
			'END' => 339
		}
	},
	{#State 312
		DEFAULT => -101
	},
	{#State 313
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 22,
			'NEXT' => 23,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 199,
			'DEFAULT' => 72,
			"{" => 31,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'term' => 60,
			'loop' => 4,
			'expr' => 205,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 13,
			'mdir' => 340,
			'sterm' => 71,
			'filter' => 30,
			'bind' => 54,
			'ident' => 153,
			'perl' => 32,
			'setlist' => 73,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 202,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 314
		DEFAULT => -102
	},
	{#State 315
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'COMMA' => 266,
			'LITERAL' => 264,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		DEFAULT => -69,
		GOTOS => {
			'expr' => 265,
			'sterm' => 71,
			'item' => 262,
			'param' => 263,
			'node' => 24,
			'ident' => 261,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 316
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'COMMA' => 266,
			'LITERAL' => 264,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		DEFAULT => -70,
		GOTOS => {
			'expr' => 265,
			'sterm' => 71,
			'item' => 262,
			'param' => 263,
			'node' => 24,
			'ident' => 261,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 317
		ACTIONS => {
			'END' => 341
		}
	},
	{#State 318
		DEFAULT => -87
	},
	{#State 319
		DEFAULT => -95
	},
	{#State 320
		ACTIONS => {
			'END' => 342
		}
	},
	{#State 321
		DEFAULT => -84
	},
	{#State 322
		ACTIONS => {
			'END' => 343
		}
	},
	{#State 323
		ACTIONS => {
			";" => 344,
			'DEFAULT' => 346,
			"{" => 31,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 40,
			'node' => 24,
			'ident' => 80,
			'term' => 345,
			'lterm' => 58
		}
	},
	{#State 324
		ACTIONS => {
			'END' => 347
		}
	},
	{#State 325
		DEFAULT => -72
	},
	{#State 326
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -150
	},
	{#State 327
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 348,
			'condition' => 76
		}
	},
	{#State 328
		ACTIONS => {
			'END' => 349
		}
	},
	{#State 329
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 350,
			'condition' => 76
		}
	},
	{#State 330
		DEFAULT => -47
	},
	{#State 331
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 351,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 332
		ACTIONS => {
			'END' => 352
		}
	},
	{#State 333
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -161
	},
	{#State 334
		DEFAULT => -78
	},
	{#State 335
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 353,
			'condition' => 76
		}
	},
	{#State 336
		ACTIONS => {
			'FINAL' => 268,
			'CATCH' => 270
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 354
		}
	},
	{#State 337
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 355,
			'condition' => 76
		}
	},
	{#State 338
		DEFAULT => -108
	},
	{#State 339
		DEFAULT => -100
	},
	{#State 340
		DEFAULT => -97
	},
	{#State 341
		DEFAULT => -58
	},
	{#State 342
		DEFAULT => -82
	},
	{#State 343
		DEFAULT => -45
	},
	{#State 344
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 356,
			'condition' => 76
		}
	},
	{#State 345
		ACTIONS => {
			";" => 357
		}
	},
	{#State 346
		ACTIONS => {
			";" => 358
		}
	},
	{#State 347
		DEFAULT => -52
	},
	{#State 348
		ACTIONS => {
			'END' => 359
		}
	},
	{#State 349
		DEFAULT => -61
	},
	{#State 350
		DEFAULT => -50
	},
	{#State 351
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 360,
			'condition' => 76
		}
	},
	{#State 352
		DEFAULT => -67
	},
	{#State 353
		ACTIONS => {
			'FINAL' => 268,
			'CATCH' => 270
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 361
		}
	},
	{#State 354
		DEFAULT => -77
	},
	{#State 355
		ACTIONS => {
			'FINAL' => 268,
			'CATCH' => 270
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 362
		}
	},
	{#State 356
		DEFAULT => -55
	},
	{#State 357
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 363,
			'condition' => 76
		}
	},
	{#State 358
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'BIND' => 5,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			'TRY' => 11,
			"[" => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 19,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 70,
			'BLOCK' => 29,
			'DEFAULT' => 72,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'bind' => 54,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 71,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 73,
			'switch' => 35,
			'try' => 36,
			'directive' => 74,
			'block' => 364,
			'condition' => 76
		}
	},
	{#State 359
		DEFAULT => -64
	},
	{#State 360
		ACTIONS => {
			'ELSIF' => 299,
			'ELSE' => 297
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 365
		}
	},
	{#State 361
		DEFAULT => -75
	},
	{#State 362
		DEFAULT => -76
	},
	{#State 363
		ACTIONS => {
			'CASE' => 323
		},
		DEFAULT => -56,
		GOTOS => {
			'case' => 366
		}
	},
	{#State 364
		DEFAULT => -54
	},
	{#State 365
		DEFAULT => -49
	},
	{#State 366
		DEFAULT => -53
	}
];


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 64 "ProsperoParser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 67 "ProsperoParser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 68 "ProsperoParser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 71 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2])
                                        if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 73 "ProsperoParser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 76 "ProsperoParser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2,
sub
#line 77 "ProsperoParser.yp"
{ return '' unless $_[1];
                                      $_[0]->location() . $_[1];
                                    }
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1, undef
	],
	[#Rule 16
		 'statement', 1,
sub
#line 90 "ProsperoParser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 17
		 'statement', 2,
sub
#line 91 "ProsperoParser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 18
		 'statement', 0, undef
	],
	[#Rule 19
		 'directive', 1,
sub
#line 95 "ProsperoParser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'directive', 1, undef
	],
	[#Rule 27
		 'atomexpr', 1,
sub
#line 110 "ProsperoParser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 28
		 'atomexpr', 1, undef
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 114 "ProsperoParser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 115 "ProsperoParser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 116 "ProsperoParser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 117 "ProsperoParser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 118 "ProsperoParser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 119 "ProsperoParser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 120 "ProsperoParser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 36
		 'atomdir', 2,
sub
#line 121 "ProsperoParser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 122 "ProsperoParser.yp"
{ $factory->return()                  }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 123 "ProsperoParser.yp"
{ $factory->stop()                    }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 124 "ProsperoParser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 40
		 'atomdir', 1,
sub
#line 125 "ProsperoParser.yp"
{ $_[0]->block_label('last ', ';')    }
	],
	[#Rule 41
		 'atomdir', 1,
sub
#line 126 "ProsperoParser.yp"
{ $_[0]->in_block('FOR')
                                        ? $factory->next($_[0]->block_label)
                                        : $_[0]->block_label('next ', ';') }
	],
	[#Rule 42
		 'atomdir', 2,
sub
#line 129 "ProsperoParser.yp"
{ if ($_[2]->[0]->[0] =~ /^'(on|off)'$/) {
                                          $_[0]->{ DEBUG_DIRS } = ($1 eq 'on');
                                          $factory->debug($_[2]);
                                      }
                                      else {
                                          $_[0]->{ DEBUG_DIRS } ? $factory->debug($_[2]) : '';
                                      }
                                    }
	],
	[#Rule 43
		 'atomdir', 1, undef
	],
	[#Rule 44
		 'atomdir', 1, undef
	],
	[#Rule 45
		 'condition', 6,
sub
#line 142 "ProsperoParser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 46
		 'condition', 3,
sub
#line 143 "ProsperoParser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 47
		 'condition', 6,
sub
#line 145 "ProsperoParser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 48
		 'condition', 3,
sub
#line 146 "ProsperoParser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 49
		 'else', 5,
sub
#line 150 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
                                      $_[5];                              }
	],
	[#Rule 50
		 'else', 3,
sub
#line 152 "ProsperoParser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 51
		 'else', 0,
sub
#line 153 "ProsperoParser.yp"
{ [ undef ]                           }
	],
	[#Rule 52
		 'switch', 6,
sub
#line 157 "ProsperoParser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 53
		 'case', 5,
sub
#line 161 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
                                      $_[5];                              }
	],
	[#Rule 54
		 'case', 4,
sub
#line 163 "ProsperoParser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 55
		 'case', 3,
sub
#line 164 "ProsperoParser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 56
		 'case', 0,
sub
#line 165 "ProsperoParser.yp"
{ [ undef ]                           }
	],
	[#Rule 57
		 '@1-3', 0,
sub
#line 168 "ProsperoParser.yp"
{ $_[0]->enter_block('FOR')           }
	],
	[#Rule 58
		 'loop', 6,
sub
#line 169 "ProsperoParser.yp"
{ $factory->foreach(@{$_[2]}, $_[5], $_[0]->leave_block)  }
	],
	[#Rule 59
		 'loop', 3,
sub
#line 170 "ProsperoParser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 60
		 '@2-3', 0,
sub
#line 171 "ProsperoParser.yp"
{ $_[0]->enter_block('WHILE')         }
	],
	[#Rule 61
		 'loop', 6,
sub
#line 172 "ProsperoParser.yp"
{ $factory->while(@_[2, 5], $_[0]->leave_block) }
	],
	[#Rule 62
		 'loop', 3,
sub
#line 173 "ProsperoParser.yp"
{ $factory->while(@_[3, 1]) }
	],
	[#Rule 63
		 '@3-4', 0,
sub
#line 176 "ProsperoParser.yp"
{ $_[0]->enter_block('BIND')          }
	],
	[#Rule 64
		 'bind', 7,
sub
#line 177 "ProsperoParser.yp"
{ $factory->bind($_[2], $_[6], $_[0]->leave_block) }
	],
	[#Rule 65
		 'bind', 2,
sub
#line 178 "ProsperoParser.yp"
{ $factory->bind($_[2])               }
	],
	[#Rule 66
		 '@4-4', 0,
sub
#line 179 "ProsperoParser.yp"
{ $_[0]->enter_block('BIND')          }
	],
	[#Rule 67
		 'bind', 7,
sub
#line 180 "ProsperoParser.yp"
{ $factory->bind($_[2], $_[6], $_[0]->leave_block) }
	],
	[#Rule 68
		 'bind', 2,
sub
#line 181 "ProsperoParser.yp"
{ $factory->bind($_[2])               }
	],
	[#Rule 69
		 'loopvar', 4,
sub
#line 184 "ProsperoParser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 70
		 'loopvar', 4,
sub
#line 185 "ProsperoParser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 71
		 'loopvar', 2,
sub
#line 186 "ProsperoParser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 72
		 'wrapper', 5,
sub
#line 190 "ProsperoParser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 73
		 'wrapper', 3,
sub
#line 192 "ProsperoParser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 74
		 'try', 5,
sub
#line 196 "ProsperoParser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 75
		 'final', 5,
sub
#line 200 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
                                      $_[5];                              }
	],
	[#Rule 76
		 'final', 5,
sub
#line 203 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
                                      $_[5];                              }
	],
	[#Rule 77
		 'final', 4,
sub
#line 206 "ProsperoParser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
                                      $_[4];                              }
	],
	[#Rule 78
		 'final', 3,
sub
#line 208 "ProsperoParser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 79
		 'final', 0,
sub
#line 209 "ProsperoParser.yp"
{ [ 0 ] }
	],
	[#Rule 80
		 'use', 2,
sub
#line 212 "ProsperoParser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 81
		 '@5-3', 0,
sub
#line 215 "ProsperoParser.yp"
{ $_[0]->push_defblock();             }
	],
	[#Rule 82
		 'view', 6,
sub
#line 216 "ProsperoParser.yp"
{ $factory->view(@_[2,5],
                                                     $_[0]->pop_defblock) }
	],
	[#Rule 83
		 '@6-2', 0,
sub
#line 220 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 84
		 'perl', 5,
sub
#line 221 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL }
                                      ? $factory->perl($_[4])
                                      : $factory->no_perl();              }
	],
	[#Rule 85
		 '@7-1', 0,
sub
#line 227 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}++;
                                      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 86
		 'rawperl', 5,
sub
#line 229 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL }
                                      ? $factory->rawperl($_[4], $rawstart)
                                      : $factory->no_perl();              }
	],
	[#Rule 87
		 'filter', 5,
sub
#line 236 "ProsperoParser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 88
		 'filter', 3,
sub
#line 238 "ProsperoParser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 89
		 'defblock', 5,
sub
#line 243 "ProsperoParser.yp"
{ my $name = join('/', @{ $_[0]->{ DEFBLOCKS } });
                                      pop(@{ $_[0]->{ DEFBLOCKS } });
                                      $_[0]->define_block($name, $_[4]);
                                      undef
                                    }
	],
	[#Rule 90
		 'defblockname', 2,
sub
#line 250 "ProsperoParser.yp"
{ push(@{ $_[0]->{ DEFBLOCKS } }, $_[2]);
                                      $_[2];
                                    }
	],
	[#Rule 91
		 'blockname', 1, undef
	],
	[#Rule 92
		 'blockname', 1,
sub
#line 256 "ProsperoParser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 93
		 'blockargs', 1, undef
	],
	[#Rule 94
		 'blockargs', 0, undef
	],
	[#Rule 95
		 'anonblock', 5,
sub
#line 264 "ProsperoParser.yp"
{ local $" = ', ';
                                      print STDERR "experimental block args: [@{ $_[2] }]\n"
                                          if $_[2];
                                      $factory->anon_block($_[4])         }
	],
	[#Rule 96
		 'capture', 3,
sub
#line 270 "ProsperoParser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 97
		 'macro', 6,
sub
#line 274 "ProsperoParser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 98
		 'macro', 3,
sub
#line 275 "ProsperoParser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 99
		 'mdir', 1, undef
	],
	[#Rule 100
		 'mdir', 4,
sub
#line 279 "ProsperoParser.yp"
{ $_[3]                               }
	],
	[#Rule 101
		 'margs', 2,
sub
#line 282 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 102
		 'margs', 2,
sub
#line 283 "ProsperoParser.yp"
{ $_[1]                               }
	],
	[#Rule 103
		 'margs', 1,
sub
#line 284 "ProsperoParser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 104
		 'metadata', 2,
sub
#line 287 "ProsperoParser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 105
		 'metadata', 2, undef
	],
	[#Rule 106
		 'metadata', 1, undef
	],
	[#Rule 107
		 'meta', 3,
sub
#line 292 "ProsperoParser.yp"
{ for ($_[3]) { s/^'//; s/'$//;
                                                       s/\\'/'/g  };
                                         [ @_[1,3] ] }
	],
	[#Rule 108
		 'meta', 5,
sub
#line 295 "ProsperoParser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 109
		 'meta', 3,
sub
#line 296 "ProsperoParser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 110
		 'term', 1, undef
	],
	[#Rule 111
		 'term', 1, undef
	],
	[#Rule 112
		 'lterm', 3,
sub
#line 308 "ProsperoParser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 113
		 'lterm', 3,
sub
#line 309 "ProsperoParser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 114
		 'lterm', 2,
sub
#line 310 "ProsperoParser.yp"
{ "[ ]"                               }
	],
	[#Rule 115
		 'lterm', 3,
sub
#line 311 "ProsperoParser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 116
		 'sterm', 1,
sub
#line 314 "ProsperoParser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 117
		 'sterm', 2,
sub
#line 315 "ProsperoParser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 118
		 'sterm', 3,
sub
#line 316 "ProsperoParser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 119
		 'sterm', 1, undef
	],
	[#Rule 120
		 'sterm', 1, undef
	],
	[#Rule 121
		 'list', 2,
sub
#line 321 "ProsperoParser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 122
		 'list', 2, undef
	],
	[#Rule 123
		 'list', 1, undef
	],
	[#Rule 124
		 'range', 3,
sub
#line 326 "ProsperoParser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 125
		 'hash', 1, undef
	],
	[#Rule 126
		 'hash', 0,
sub
#line 331 "ProsperoParser.yp"
{ "" }
	],
	[#Rule 127
		 'params', 2,
sub
#line 334 "ProsperoParser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 128
		 'params', 2, undef
	],
	[#Rule 129
		 'params', 1, undef
	],
	[#Rule 130
		 'param', 3,
sub
#line 339 "ProsperoParser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 131
		 'param', 3,
sub
#line 340 "ProsperoParser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 132
		 'ident', 3,
sub
#line 343 "ProsperoParser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 133
		 'ident', 3,
sub
#line 344 "ProsperoParser.yp"
{ push(@{$_[1]},
                                           map {($_, 0)} split(/\./, $_[3]));
                                      $_[1];                              }
	],
	[#Rule 134
		 'ident', 1, undef
	],
	[#Rule 135
		 'node', 1,
sub
#line 350 "ProsperoParser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 136
		 'node', 4,
sub
#line 351 "ProsperoParser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 137
		 'item', 1,
sub
#line 354 "ProsperoParser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 138
		 'item', 3,
sub
#line 355 "ProsperoParser.yp"
{ $_[2]                               }
	],
	[#Rule 139
		 'item', 2,
sub
#line 356 "ProsperoParser.yp"
{ $_[0]->{ V1DOLLAR }
                                       ? "'$_[2]'"
                                       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 140
		 'expr', 3,
sub
#line 361 "ProsperoParser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 141
		 'expr', 3,
sub
#line 362 "ProsperoParser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 142
		 'expr', 3,
sub
#line 363 "ProsperoParser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 143
		 'expr', 3,
sub
#line 364 "ProsperoParser.yp"
{ "int($_[1] / $_[3])"                }
	],
	[#Rule 144
		 'expr', 3,
sub
#line 365 "ProsperoParser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 145
		 'expr', 3,
sub
#line 366 "ProsperoParser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 146
		 'expr', 3,
sub
#line 367 "ProsperoParser.yp"
{ "$_[1]  . $_[3]"                    }
	],
	[#Rule 147
		 'expr', 3,
sub
#line 368 "ProsperoParser.yp"
{ "$_[1] && $_[3]"                    }
	],
	[#Rule 148
		 'expr', 3,
sub
#line 369 "ProsperoParser.yp"
{ "$_[1] || $_[3]"                    }
	],
	[#Rule 149
		 'expr', 2,
sub
#line 370 "ProsperoParser.yp"
{ "! $_[2]"                           }
	],
	[#Rule 150
		 'expr', 5,
sub
#line 371 "ProsperoParser.yp"
{ "$_[1] ? $_[3] : $_[5]"             }
	],
	[#Rule 151
		 'expr', 3,
sub
#line 372 "ProsperoParser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 152
		 'expr', 3,
sub
#line 373 "ProsperoParser.yp"
{ "($_[2])"                           }
	],
	[#Rule 153
		 'expr', 1, undef
	],
	[#Rule 154
		 'setlist', 2,
sub
#line 377 "ProsperoParser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 155
		 'setlist', 2, undef
	],
	[#Rule 156
		 'setlist', 1, undef
	],
	[#Rule 157
		 'assign', 3,
sub
#line 383 "ProsperoParser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 158
		 'assign', 3,
sub
#line 384 "ProsperoParser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 159
		 'args', 2,
sub
#line 391 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 160
		 'args', 2,
sub
#line 392 "ProsperoParser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 161
		 'args', 4,
sub
#line 393 "ProsperoParser.yp"
{ push(@{$_[1]->[0]}, "'', " .
                                      $factory->assign(@_[2,4])); $_[1]  }
	],
	[#Rule 162
		 'args', 2,
sub
#line 395 "ProsperoParser.yp"
{ $_[1]                               }
	],
	[#Rule 163
		 'args', 0,
sub
#line 396 "ProsperoParser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 164
		 'lnameargs', 3,
sub
#line 406 "ProsperoParser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 165
		 'lnameargs', 1, undef
	],
	[#Rule 166
		 'lvalue', 1, undef
	],
	[#Rule 167
		 'lvalue', 3,
sub
#line 411 "ProsperoParser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 168
		 'lvalue', 1, undef
	],
	[#Rule 169
		 'nameargs', 3,
sub
#line 415 "ProsperoParser.yp"
{ [ [$factory->ident($_[2])], $_[3] ]   }
	],
	[#Rule 170
		 'nameargs', 2,
sub
#line 416 "ProsperoParser.yp"
{ [ @_[1,2] ] }
	],
	[#Rule 171
		 'nameargs', 4,
sub
#line 417 "ProsperoParser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 172
		 'names', 3,
sub
#line 420 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[3]); $_[1] }
	],
	[#Rule 173
		 'names', 1,
sub
#line 421 "ProsperoParser.yp"
{ [ $_[1] ]                    }
	],
	[#Rule 174
		 'name', 3,
sub
#line 424 "ProsperoParser.yp"
{ $factory->quoted($_[2])  }
	],
	[#Rule 175
		 'name', 1,
sub
#line 425 "ProsperoParser.yp"
{ "'$_[1]'" }
	],
	[#Rule 176
		 'name', 1, undef
	],
	[#Rule 177
		 'filename', 3,
sub
#line 429 "ProsperoParser.yp"
{ "$_[1].$_[3]" }
	],
	[#Rule 178
		 'filename', 1, undef
	],
	[#Rule 179
		 'filepart', 1, undef
	],
	[#Rule 180
		 'filepart', 1, undef
	],
	[#Rule 181
		 'filepart', 1, undef
	],
	[#Rule 182
		 'quoted', 2,
sub
#line 443 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2])
                                          if defined $_[2]; $_[1]         }
	],
	[#Rule 183
		 'quoted', 0,
sub
#line 445 "ProsperoParser.yp"
{ [ ]                                 }
	],
	[#Rule 184
		 'quotable', 1,
sub
#line 448 "ProsperoParser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 185
		 'quotable', 1,
sub
#line 449 "ProsperoParser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 186
		 'quotable', 1,
sub
#line 450 "ProsperoParser.yp"
{ undef                               }
	]
];



1;

__END__

=head1 NAME

Template::Grammar - Parser state/rule tables for the TT grammar

=head1 SYNOPSIS

    # no user serviceable parts inside

=head1 DESCRIPTION

This module defines the state and rule tables that the L<Template::Parser>
module uses to parse templates.  It is generated from a YACC-like grammar
using the C<Parse::Yapp> module.  The F<parser> sub-directory of the
Template Toolkit source distribution contains the grammar and other
files required to generate this module.

But you don't need to worry about any of that unless you're planning to
modify the Template Toolkit language.

=head1 AUTHOR

Andy Wardley E<lt>abw@wardley.orgE<gt>

L<http://wardley.org/>

=head1 COPYRIGHT

Copyright (C) 1996-2007 Andy Wardley.  All Rights Reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 SEE ALSO

L<Template::Parser>

=cut

# Local Variables:
# mode: perl
# perl-indent-level: 4
# indent-tabs-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:










