#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@wardley.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2006 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
# REVISION
#   $Id$
#
# IMPORTANT NOTE
#   This module is constructed from the parser/Grammar.pm.skel file by
#   running the parser/yc script.  You only need to do this if # you
#   have modified the grammar in the parser/Parser.yp file and need #
#   to-recompile it.  See the README in the 'parser' directory for
#   more information (sub-directory of the Template distribution).
#
#========================================================================

package Prospero::Component::TT2::Grammar;

use strict;
use warnings;

our $VERSION  = 2.25;

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================

# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw(
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META IN
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR VIEW DEBUG
    BINDING COMPONENT
    );

# for historical reasons, != and == are converted to ne and eq to perform
# stringwise comparison (mainly because it doesn't generate "non-numerical
# comparison" warnings which != and == can) but the others (e.g. < > <= >=)
# are not converted to their stringwise equivalents.  I added 'gt' et al,
# briefly for v2.04d and then took them out again in 2.04e.


%CMPOP = qw(
    != ne
    == eq
    <  <
    >  >
    >= >=
    <= <=
);

#    eq eq  # add these lines to the above to
#    lt lt  # enable the eq, lt and gt operators
#    gt gt

#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '_'       => 'CAT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case,
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{
#    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @tokens = qw< ( ) [ ] { } ${ $ + / ; : ? >;
    my @cmpop  = keys %CMPOP;
#    my @binop  = qw( + - * % );              # '/' above, in @tokens
    my @binop  = qw( - * % );              # '+' and '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens }
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'template' => 52,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'directive' => 74,
			'block' => 75,
			'condition' => 76
		}
	},
	{#State 1
		ACTIONS => {
			"\$" => 43,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\${" => 37
		},
		GOTOS => {
			'setlist' => 79,
			'item' => 39,
			'assign' => 19,
			'node' => 23,
			'ident' => 77
		}
	},
	{#State 2
		DEFAULT => -134
	},
	{#State 3
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 82,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 4
		DEFAULT => -23
	},
	{#State 5
		ACTIONS => {
			";" => 83
		}
	},
	{#State 6
		DEFAULT => -38
	},
	{#State 7
		DEFAULT => -14
	},
	{#State 8
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 93,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 9
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"]" => 97,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 99,
			'item' => 39,
			'range' => 96,
			'node' => 23,
			'ident' => 80,
			'term' => 98,
			'lterm' => 58,
			'list' => 95
		}
	},
	{#State 10
		ACTIONS => {
			";" => 100
		}
	},
	{#State 11
		DEFAULT => -5
	},
	{#State 12
		ACTIONS => {
			";" => -20
		},
		DEFAULT => -28
	},
	{#State 13
		DEFAULT => -82,
		GOTOS => {
			'@6-1' => 101
		}
	},
	{#State 14
		ACTIONS => {
			'IDENT' => 102
		},
		DEFAULT => -91,
		GOTOS => {
			'blockargs' => 105,
			'metadata' => 104,
			'meta' => 103
		}
	},
	{#State 15
		ACTIONS => {
			'IDENT' => 102
		},
		GOTOS => {
			'metadata' => 106,
			'meta' => 103
		}
	},
	{#State 16
		ACTIONS => {
			'DOT' => 107,
			'ASSIGN' => 108
		},
		DEFAULT => -113
	},
	{#State 17
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 109,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 18
		ACTIONS => {
			'IDENT' => 110
		}
	},
	{#State 19
		DEFAULT => -153
	},
	{#State 20
		DEFAULT => -12
	},
	{#State 21
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 111,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 39,
			'loopvar' => 113,
			'node' => 23,
			'ident' => 80,
			'term' => 112,
			'lterm' => 58
		}
	},
	{#State 22
		DEFAULT => -41
	},
	{#State 23
		DEFAULT => -131
	},
	{#State 24
		DEFAULT => -6
	},
	{#State 25
		ACTIONS => {
			"\"" => 120,
			"\$" => 117,
			'LITERAL' => 119,
			'FILENAME' => 86,
			'IDENT' => 114,
			'NUMBER' => 87,
			"\${" => 37
		},
		GOTOS => {
			'names' => 94,
			'lvalue' => 115,
			'item' => 116,
			'name' => 85,
			'filepart' => 90,
			'filename' => 88,
			'nameargs' => 121,
			'lnameargs' => 118
		}
	},
	{#State 26
		DEFAULT => -117
	},
	{#State 27
		ACTIONS => {
			"\$" => 43,
			'IDENT' => 2,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'ident' => 122
		}
	},
	{#State 28
		ACTIONS => {
			'LITERAL' => 127,
			'FILENAME' => 86,
			'IDENT' => 123,
			'NUMBER' => 87
		},
		DEFAULT => -91,
		GOTOS => {
			'blockargs' => 126,
			'filepart' => 90,
			'filename' => 125,
			'blockname' => 124,
			'metadata' => 104,
			'meta' => 103
		}
	},
	{#State 29
		DEFAULT => -44
	},
	{#State 30
		ACTIONS => {
			"\$" => 43,
			'LITERAL' => 132,
			'IDENT' => 2,
			"\${" => 37
		},
		DEFAULT => -123,
		GOTOS => {
			'params' => 131,
			'hash' => 128,
			'item' => 129,
			'param' => 130
		}
	},
	{#State 31
		DEFAULT => -26
	},
	{#State 32
		ACTIONS => {
			"\"" => 120,
			"\$" => 117,
			'LITERAL' => 119,
			'FILENAME' => 86,
			'IDENT' => 114,
			'NUMBER' => 87,
			"\${" => 37
		},
		GOTOS => {
			'names' => 94,
			'lvalue' => 115,
			'item' => 116,
			'name' => 85,
			'filepart' => 90,
			'filename' => 88,
			'nameargs' => 121,
			'lnameargs' => 133
		}
	},
	{#State 33
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -2,
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 134,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 50,
			'sterm' => 71,
			'defblockname' => 14,
			'filter' => 29,
			'bind' => 54,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 74,
			'macro' => 20,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 34
		DEFAULT => -22
	},
	{#State 35
		DEFAULT => -25
	},
	{#State 36
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 135,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 37
		ACTIONS => {
			"\"" => 62,
			"\$" => 43,
			'LITERAL' => 81,
			'IDENT' => 2,
			'REF' => 27,
			'NUMBER' => 26,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 136,
			'item' => 39,
			'node' => 23,
			'ident' => 80
		}
	},
	{#State 38
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 137,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 39
		ACTIONS => {
			"(" => 138
		},
		DEFAULT => -132
	},
	{#State 40
		ACTIONS => {
			";" => 139
		}
	},
	{#State 41
		DEFAULT => -39
	},
	{#State 42
		DEFAULT => -11
	},
	{#State 43
		ACTIONS => {
			'IDENT' => 140
		}
	},
	{#State 44
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 141,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 45
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 142,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 46
		DEFAULT => -43
	},
	{#State 47
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 143,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 48
		ACTIONS => {
			'IF' => 147,
			'FILTER' => 146,
			'FOR' => 145,
			'WHILE' => 149,
			'WRAPPER' => 148,
			'UNLESS' => 144
		}
	},
	{#State 49
		DEFAULT => -40
	},
	{#State 50
		DEFAULT => -10
	},
	{#State 51
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 150,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 52
		ACTIONS => {
			'' => 151
		}
	},
	{#State 53
		ACTIONS => {
			"\"" => 92,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'filename' => 88,
			'name' => 152
		}
	},
	{#State 54
		DEFAULT => -24
	},
	{#State 55
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 59,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 155,
			'sterm' => 71,
			'item' => 39,
			'assign' => 154,
			'node' => 23,
			'ident' => 153,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 56
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 156,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 57
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 157,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 58
		DEFAULT => -107
	},
	{#State 59
		ACTIONS => {
			'ASSIGN' => 158
		},
		DEFAULT => -116
	},
	{#State 60
		DEFAULT => -150
	},
	{#State 61
		DEFAULT => -15
	},
	{#State 62
		DEFAULT => -180,
		GOTOS => {
			'quoted' => 159
		}
	},
	{#State 63
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 160,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 64
		ACTIONS => {
			";" => -16,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -27
	},
	{#State 65
		DEFAULT => -13
	},
	{#State 66
		DEFAULT => -37
	},
	{#State 67
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 171,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 68
		DEFAULT => -9
	},
	{#State 69
		ACTIONS => {
			"\"" => 92,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'filename' => 88,
			'name' => 172
		}
	},
	{#State 70
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 173,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 71
		DEFAULT => -108
	},
	{#State 72
		ACTIONS => {
			"\$" => 43,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\${" => 37
		},
		GOTOS => {
			'setlist' => 174,
			'item' => 39,
			'assign' => 19,
			'node' => 23,
			'ident' => 77
		}
	},
	{#State 73
		ACTIONS => {
			"\$" => 43,
			'COMMA' => 176,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\${" => 37
		},
		DEFAULT => -19,
		GOTOS => {
			'item' => 39,
			'assign' => 175,
			'node' => 23,
			'ident' => 77
		}
	},
	{#State 74
		DEFAULT => -8
	},
	{#State 75
		DEFAULT => -1
	},
	{#State 76
		DEFAULT => -21
	},
	{#State 77
		ACTIONS => {
			'ASSIGN' => 177,
			'DOT' => 107
		}
	},
	{#State 78
		ACTIONS => {
			'ASSIGN' => 158
		}
	},
	{#State 79
		ACTIONS => {
			'COMMA' => 176,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\$" => 43,
			"\${" => 37
		},
		DEFAULT => -31,
		GOTOS => {
			'item' => 39,
			'assign' => 175,
			'node' => 23,
			'ident' => 77
		}
	},
	{#State 80
		ACTIONS => {
			'DOT' => 107
		},
		DEFAULT => -113
	},
	{#State 81
		DEFAULT => -116
	},
	{#State 82
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 178,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 83
		DEFAULT => -7
	},
	{#State 84
		DEFAULT => -177
	},
	{#State 85
		DEFAULT => -170
	},
	{#State 86
		DEFAULT => -176
	},
	{#State 87
		DEFAULT => -178
	},
	{#State 88
		ACTIONS => {
			'DOT' => 179
		},
		DEFAULT => -172
	},
	{#State 89
		ACTIONS => {
			"\$" => 43,
			'IDENT' => 2,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'ident' => 180
		}
	},
	{#State 90
		DEFAULT => -175
	},
	{#State 91
		DEFAULT => -173
	},
	{#State 92
		DEFAULT => -180,
		GOTOS => {
			'quoted' => 181
		}
	},
	{#State 93
		DEFAULT => -36
	},
	{#State 94
		ACTIONS => {
			"+" => 182,
			"(" => 183
		},
		DEFAULT => -160,
		GOTOS => {
			'args' => 184
		}
	},
	{#State 95
		ACTIONS => {
			"{" => 30,
			'COMMA' => 187,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"]" => 185,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 186,
			'lterm' => 58
		}
	},
	{#State 96
		ACTIONS => {
			"]" => 188
		}
	},
	{#State 97
		DEFAULT => -111
	},
	{#State 98
		DEFAULT => -120
	},
	{#State 99
		ACTIONS => {
			'TO' => 189
		},
		DEFAULT => -108
	},
	{#State 100
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 190,
			'condition' => 76
		}
	},
	{#State 101
		ACTIONS => {
			";" => 191
		}
	},
	{#State 102
		ACTIONS => {
			'ASSIGN' => 192
		}
	},
	{#State 103
		DEFAULT => -103
	},
	{#State 104
		ACTIONS => {
			'COMMA' => 194,
			'IDENT' => 102
		},
		DEFAULT => -90,
		GOTOS => {
			'meta' => 193
		}
	},
	{#State 105
		ACTIONS => {
			";" => 195
		}
	},
	{#State 106
		ACTIONS => {
			'COMMA' => 194,
			'IDENT' => 102
		},
		DEFAULT => -17,
		GOTOS => {
			'meta' => 193
		}
	},
	{#State 107
		ACTIONS => {
			"\$" => 43,
			'IDENT' => 2,
			'NUMBER' => 197,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 196
		}
	},
	{#State 108
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'COMPONENT' => 53,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 21,
			'NEXT' => 22,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 25,
			'RETURN' => 66,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 198,
			'DEFAULT' => 72,
			"{" => 30,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'term' => 60,
			'loop' => 4,
			'expr' => 200,
			'wrapper' => 46,
			'atomexpr' => 48,
			'atomdir' => 12,
			'mdir' => 199,
			'sterm' => 71,
			'filter' => 29,
			'bind' => 54,
			'ident' => 153,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 201,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 109
		DEFAULT => -34
	},
	{#State 110
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'COMPONENT' => 53,
			'INCLUDE' => 17,
			"(" => 203,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 21,
			'NEXT' => 22,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 25,
			'RETURN' => 66,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 198,
			'DEFAULT' => 72,
			"{" => 30,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'term' => 60,
			'loop' => 4,
			'expr' => 204,
			'wrapper' => 46,
			'atomexpr' => 48,
			'atomdir' => 12,
			'mdir' => 202,
			'sterm' => 71,
			'filter' => 29,
			'bind' => 54,
			'ident' => 153,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 201,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 111
		ACTIONS => {
			'IN' => 206,
			'ASSIGN' => 205
		},
		DEFAULT => -134
	},
	{#State 112
		DEFAULT => -160,
		GOTOS => {
			'args' => 207
		}
	},
	{#State 113
		ACTIONS => {
			";" => 208
		}
	},
	{#State 114
		ACTIONS => {
			'ASSIGN' => -134
		},
		DEFAULT => -177
	},
	{#State 115
		ACTIONS => {
			'ASSIGN' => 209
		}
	},
	{#State 116
		DEFAULT => -163
	},
	{#State 117
		ACTIONS => {
			"\$" => 43,
			'IDENT' => 210,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'ident' => 180
		}
	},
	{#State 118
		ACTIONS => {
			";" => 211
		}
	},
	{#State 119
		ACTIONS => {
			'ASSIGN' => -165
		},
		DEFAULT => -173
	},
	{#State 120
		DEFAULT => -180,
		GOTOS => {
			'quoted' => 212
		}
	},
	{#State 121
		DEFAULT => -162
	},
	{#State 122
		ACTIONS => {
			'DOT' => 107
		},
		DEFAULT => -114
	},
	{#State 123
		ACTIONS => {
			'ASSIGN' => 192
		},
		DEFAULT => -177
	},
	{#State 124
		DEFAULT => -87
	},
	{#State 125
		ACTIONS => {
			'DOT' => 179
		},
		DEFAULT => -88
	},
	{#State 126
		ACTIONS => {
			";" => 213
		}
	},
	{#State 127
		DEFAULT => -89
	},
	{#State 128
		ACTIONS => {
			"}" => 214
		}
	},
	{#State 129
		ACTIONS => {
			'ASSIGN' => 215
		}
	},
	{#State 130
		DEFAULT => -126
	},
	{#State 131
		ACTIONS => {
			"\$" => 43,
			'COMMA' => 217,
			'LITERAL' => 132,
			'IDENT' => 2,
			"\${" => 37
		},
		DEFAULT => -122,
		GOTOS => {
			'item' => 129,
			'param' => 216
		}
	},
	{#State 132
		ACTIONS => {
			'ASSIGN' => 218
		}
	},
	{#State 133
		DEFAULT => -77
	},
	{#State 134
		DEFAULT => -4
	},
	{#State 135
		ACTIONS => {
			";" => 219
		}
	},
	{#State 136
		ACTIONS => {
			"}" => 220
		}
	},
	{#State 137
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -146
	},
	{#State 138
		DEFAULT => -160,
		GOTOS => {
			'args' => 221
		}
	},
	{#State 139
		DEFAULT => -80,
		GOTOS => {
			'@5-2' => 222
		}
	},
	{#State 140
		DEFAULT => -136
	},
	{#State 141
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 223,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 142
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -30
	},
	{#State 143
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -29
	},
	{#State 144
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 224,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 145
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 111,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 39,
			'loopvar' => 225,
			'node' => 23,
			'ident' => 80,
			'term' => 112,
			'lterm' => 58
		}
	},
	{#State 146
		ACTIONS => {
			"\"" => 120,
			"\$" => 117,
			'LITERAL' => 119,
			'FILENAME' => 86,
			'IDENT' => 114,
			'NUMBER' => 87,
			"\${" => 37
		},
		GOTOS => {
			'names' => 94,
			'lvalue' => 115,
			'item' => 116,
			'name' => 85,
			'filepart' => 90,
			'filename' => 88,
			'nameargs' => 121,
			'lnameargs' => 226
		}
	},
	{#State 147
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 227,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 148
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 228,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 149
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 229,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 150
		DEFAULT => -42
	},
	{#State 151
		DEFAULT => 0
	},
	{#State 152
		DEFAULT => -65
	},
	{#State 153
		ACTIONS => {
			'DOT' => 107,
			'ASSIGN' => 177
		},
		DEFAULT => -113
	},
	{#State 154
		ACTIONS => {
			")" => 230
		}
	},
	{#State 155
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			")" => 231,
			'OR' => 166
		}
	},
	{#State 156
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 232,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 157
		ACTIONS => {
			";" => 233
		}
	},
	{#State 158
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 234,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 159
		ACTIONS => {
			"\"" => 239,
			'TEXT' => 236,
			";" => 238,
			"\$" => 43,
			'IDENT' => 2,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'ident' => 235,
			'quotable' => 237
		}
	},
	{#State 160
		DEFAULT => -35
	},
	{#State 161
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 240,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 162
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 241,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 163
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 242,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 164
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 243,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 165
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 244,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 166
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 245,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 167
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 246,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 168
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 247,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 169
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 248,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 170
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 249,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 171
		DEFAULT => -33
	},
	{#State 172
		ACTIONS => {
			";" => 250
		}
	},
	{#State 173
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 251,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 174
		ACTIONS => {
			'COMMA' => 176,
			'LITERAL' => 78,
			'IDENT' => 2,
			"\$" => 43,
			"\${" => 37
		},
		DEFAULT => -32,
		GOTOS => {
			'item' => 39,
			'assign' => 175,
			'node' => 23,
			'ident' => 77
		}
	},
	{#State 175
		DEFAULT => -151
	},
	{#State 176
		DEFAULT => -152
	},
	{#State 177
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 252,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 178
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 253,
			'condition' => 76
		}
	},
	{#State 179
		ACTIONS => {
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 254
		}
	},
	{#State 180
		ACTIONS => {
			'DOT' => 107
		},
		DEFAULT => -160,
		GOTOS => {
			'args' => 255
		}
	},
	{#State 181
		ACTIONS => {
			"\"" => 256,
			'TEXT' => 236,
			";" => 238,
			"\$" => 43,
			'IDENT' => 2,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'ident' => 235,
			'quotable' => 237
		}
	},
	{#State 182
		ACTIONS => {
			"\"" => 92,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'filename' => 88,
			'name' => 257
		}
	},
	{#State 183
		DEFAULT => -160,
		GOTOS => {
			'args' => 258
		}
	},
	{#State 184
		ACTIONS => {
			'NOT' => 38,
			'LITERAL' => 262,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"{" => 30,
			'COMMA' => 264,
			"(" => 55,
			"\${" => 37
		},
		DEFAULT => -167,
		GOTOS => {
			'expr' => 263,
			'sterm' => 71,
			'item' => 260,
			'param' => 261,
			'node' => 23,
			'ident' => 259,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 185
		DEFAULT => -109
	},
	{#State 186
		DEFAULT => -118
	},
	{#State 187
		DEFAULT => -119
	},
	{#State 188
		DEFAULT => -110
	},
	{#State 189
		ACTIONS => {
			"\"" => 62,
			"\$" => 43,
			'LITERAL' => 81,
			'IDENT' => 2,
			'REF' => 27,
			'NUMBER' => 26,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 265,
			'item' => 39,
			'node' => 23,
			'ident' => 80
		}
	},
	{#State 190
		ACTIONS => {
			'FINAL' => 266,
			'CATCH' => 268
		},
		DEFAULT => -76,
		GOTOS => {
			'final' => 267
		}
	},
	{#State 191
		ACTIONS => {
			'TEXT' => 269
		}
	},
	{#State 192
		ACTIONS => {
			"\"" => 272,
			'LITERAL' => 271,
			'NUMBER' => 270
		}
	},
	{#State 193
		DEFAULT => -101
	},
	{#State 194
		DEFAULT => -102
	},
	{#State 195
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'template' => 273,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 75,
			'condition' => 76
		}
	},
	{#State 196
		DEFAULT => -129
	},
	{#State 197
		DEFAULT => -130
	},
	{#State 198
		ACTIONS => {
			";" => 274
		}
	},
	{#State 199
		DEFAULT => -93
	},
	{#State 200
		ACTIONS => {
			";" => -154,
			"+" => 161,
			'LITERAL' => -154,
			'IDENT' => -154,
			'CAT' => 167,
			"\$" => -154,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			'COMMA' => -154,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"\${" => -154
		},
		DEFAULT => -27
	},
	{#State 201
		DEFAULT => -96
	},
	{#State 202
		DEFAULT => -95
	},
	{#State 203
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 59,
			'IDENT' => 275,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 155,
			'sterm' => 71,
			'item' => 39,
			'assign' => 154,
			'margs' => 276,
			'node' => 23,
			'ident' => 153,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 204
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -27
	},
	{#State 205
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 277,
			'lterm' => 58
		}
	},
	{#State 206
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 278,
			'lterm' => 58
		}
	},
	{#State 207
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'COMMA' => 264,
			'LITERAL' => 262,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		DEFAULT => -68,
		GOTOS => {
			'expr' => 263,
			'sterm' => 71,
			'item' => 260,
			'param' => 261,
			'node' => 23,
			'ident' => 259,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 208
		DEFAULT => -57,
		GOTOS => {
			'@1-3' => 279
		}
	},
	{#State 209
		ACTIONS => {
			"\"" => 92,
			"\$" => 89,
			'LITERAL' => 91,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'names' => 94,
			'nameargs' => 280,
			'filename' => 88,
			'name' => 85
		}
	},
	{#State 210
		ACTIONS => {
			'ASSIGN' => -136
		},
		DEFAULT => -134
	},
	{#State 211
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 281,
			'condition' => 76
		}
	},
	{#State 212
		ACTIONS => {
			"\"" => 282,
			'TEXT' => 236,
			";" => 238,
			"\$" => 43,
			'IDENT' => 2,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'ident' => 235,
			'quotable' => 237
		}
	},
	{#State 213
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 283,
			'condition' => 76
		}
	},
	{#State 214
		DEFAULT => -112
	},
	{#State 215
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 284,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 216
		DEFAULT => -124
	},
	{#State 217
		DEFAULT => -125
	},
	{#State 218
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 285,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 219
		DEFAULT => -78,
		GOTOS => {
			'@4-3' => 286
		}
	},
	{#State 220
		DEFAULT => -135
	},
	{#State 221
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'COMMA' => 264,
			'LITERAL' => 262,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			")" => 287,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 263,
			'sterm' => 71,
			'item' => 260,
			'param' => 261,
			'node' => 23,
			'ident' => 259,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 222
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 288,
			'condition' => 76
		}
	},
	{#State 223
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 289,
			'condition' => 76
		}
	},
	{#State 224
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -48
	},
	{#State 225
		DEFAULT => -59
	},
	{#State 226
		DEFAULT => -85
	},
	{#State 227
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -46
	},
	{#State 228
		DEFAULT => -70
	},
	{#State 229
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -62
	},
	{#State 230
		DEFAULT => -148
	},
	{#State 231
		DEFAULT => -149
	},
	{#State 232
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 290,
			'condition' => 76
		}
	},
	{#State 233
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 291,
			'condition' => 76
		}
	},
	{#State 234
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -155
	},
	{#State 235
		ACTIONS => {
			'DOT' => 107
		},
		DEFAULT => -181
	},
	{#State 236
		DEFAULT => -182
	},
	{#State 237
		DEFAULT => -179
	},
	{#State 238
		DEFAULT => -183
	},
	{#State 239
		DEFAULT => -115
	},
	{#State 240
		ACTIONS => {
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -139
	},
	{#State 241
		ACTIONS => {
			":" => 292,
			'CMPOP' => 168,
			"?" => 162,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 242
		ACTIONS => {
			'MOD' => 169
		},
		DEFAULT => -140
	},
	{#State 243
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -144
	},
	{#State 244
		ACTIONS => {
			'DIV' => 163,
			"+" => 161,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -137
	},
	{#State 245
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -145
	},
	{#State 246
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'CMPOP' => 168,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -143
	},
	{#State 247
		ACTIONS => {
			'DIV' => 163,
			'BINOP' => 165,
			"+" => 161,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -142
	},
	{#State 248
		DEFAULT => -141
	},
	{#State 249
		ACTIONS => {
			'DIV' => 163,
			'MOD' => 169
		},
		DEFAULT => -138
	},
	{#State 250
		DEFAULT => -63,
		GOTOS => {
			'@3-3' => 293
		}
	},
	{#State 251
		DEFAULT => -60,
		GOTOS => {
			'@2-3' => 294
		}
	},
	{#State 252
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -154
	},
	{#State 253
		ACTIONS => {
			'ELSIF' => 297,
			'ELSE' => 295
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 296
		}
	},
	{#State 254
		DEFAULT => -174
	},
	{#State 255
		ACTIONS => {
			'NOT' => 38,
			'LITERAL' => 262,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"{" => 30,
			'COMMA' => 264,
			"(" => 55,
			"\${" => 37
		},
		DEFAULT => -166,
		GOTOS => {
			'expr' => 263,
			'sterm' => 71,
			'item' => 260,
			'param' => 261,
			'node' => 23,
			'ident' => 259,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 256
		DEFAULT => -171
	},
	{#State 257
		DEFAULT => -169
	},
	{#State 258
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'COMMA' => 264,
			'LITERAL' => 262,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			")" => 298,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 263,
			'sterm' => 71,
			'item' => 260,
			'param' => 261,
			'node' => 23,
			'ident' => 259,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 259
		ACTIONS => {
			'DOT' => 107,
			'ASSIGN' => 299
		},
		DEFAULT => -113
	},
	{#State 260
		ACTIONS => {
			"(" => 138,
			'ASSIGN' => 215
		},
		DEFAULT => -132
	},
	{#State 261
		DEFAULT => -157
	},
	{#State 262
		ACTIONS => {
			'ASSIGN' => 218
		},
		DEFAULT => -116
	},
	{#State 263
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -156
	},
	{#State 264
		DEFAULT => -159
	},
	{#State 265
		DEFAULT => -121
	},
	{#State 266
		ACTIONS => {
			";" => 300
		}
	},
	{#State 267
		ACTIONS => {
			'END' => 301
		}
	},
	{#State 268
		ACTIONS => {
			";" => 303,
			'DEFAULT' => 304,
			'FILENAME' => 86,
			'IDENT' => 84,
			'NUMBER' => 87
		},
		GOTOS => {
			'filepart' => 90,
			'filename' => 302
		}
	},
	{#State 269
		ACTIONS => {
			'END' => 305
		}
	},
	{#State 270
		DEFAULT => -106
	},
	{#State 271
		DEFAULT => -104
	},
	{#State 272
		ACTIONS => {
			'TEXT' => 306
		}
	},
	{#State 273
		ACTIONS => {
			'END' => 307
		}
	},
	{#State 274
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 308,
			'condition' => 76
		}
	},
	{#State 275
		ACTIONS => {
			'IDENT' => -100,
			")" => -100,
			'COMMA' => -100
		},
		DEFAULT => -134
	},
	{#State 276
		ACTIONS => {
			'COMMA' => 311,
			'IDENT' => 309,
			")" => 310
		}
	},
	{#State 277
		DEFAULT => -160,
		GOTOS => {
			'args' => 312
		}
	},
	{#State 278
		DEFAULT => -160,
		GOTOS => {
			'args' => 313
		}
	},
	{#State 279
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 314,
			'condition' => 76
		}
	},
	{#State 280
		DEFAULT => -161
	},
	{#State 281
		ACTIONS => {
			'END' => 315
		}
	},
	{#State 282
		ACTIONS => {
			'ASSIGN' => -164
		},
		DEFAULT => -171
	},
	{#State 283
		ACTIONS => {
			'END' => 316
		}
	},
	{#State 284
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -128
	},
	{#State 285
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -127
	},
	{#State 286
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 317,
			'condition' => 76
		}
	},
	{#State 287
		DEFAULT => -133
	},
	{#State 288
		ACTIONS => {
			'END' => 318
		}
	},
	{#State 289
		ACTIONS => {
			'ELSIF' => 297,
			'ELSE' => 295
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 319
		}
	},
	{#State 290
		ACTIONS => {
			'CASE' => 320
		},
		DEFAULT => -56,
		GOTOS => {
			'case' => 321
		}
	},
	{#State 291
		ACTIONS => {
			'END' => 322
		}
	},
	{#State 292
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 323,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 293
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 324,
			'condition' => 76
		}
	},
	{#State 294
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 325,
			'condition' => 76
		}
	},
	{#State 295
		ACTIONS => {
			";" => 326
		}
	},
	{#State 296
		ACTIONS => {
			'END' => 327
		}
	},
	{#State 297
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 328,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 298
		DEFAULT => -168
	},
	{#State 299
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'expr' => 329,
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 300
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 330,
			'condition' => 76
		}
	},
	{#State 301
		DEFAULT => -71
	},
	{#State 302
		ACTIONS => {
			'DOT' => 179,
			";" => 331
		}
	},
	{#State 303
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 332,
			'condition' => 76
		}
	},
	{#State 304
		ACTIONS => {
			";" => 333
		}
	},
	{#State 305
		DEFAULT => -83
	},
	{#State 306
		ACTIONS => {
			"\"" => 334
		}
	},
	{#State 307
		DEFAULT => -86
	},
	{#State 308
		ACTIONS => {
			'END' => 335
		}
	},
	{#State 309
		DEFAULT => -98
	},
	{#State 310
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'COMPONENT' => 53,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 21,
			'NEXT' => 22,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 25,
			'RETURN' => 66,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 198,
			'DEFAULT' => 72,
			"{" => 30,
			"\${" => 37
		},
		GOTOS => {
			'item' => 39,
			'node' => 23,
			'term' => 60,
			'loop' => 4,
			'expr' => 204,
			'wrapper' => 46,
			'atomexpr' => 48,
			'atomdir' => 12,
			'mdir' => 336,
			'sterm' => 71,
			'filter' => 29,
			'bind' => 54,
			'ident' => 153,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 201,
			'condition' => 76,
			'lterm' => 58
		}
	},
	{#State 311
		DEFAULT => -99
	},
	{#State 312
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'COMMA' => 264,
			'LITERAL' => 262,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		DEFAULT => -66,
		GOTOS => {
			'expr' => 263,
			'sterm' => 71,
			'item' => 260,
			'param' => 261,
			'node' => 23,
			'ident' => 259,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 313
		ACTIONS => {
			'NOT' => 38,
			"{" => 30,
			'COMMA' => 264,
			'LITERAL' => 262,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		DEFAULT => -67,
		GOTOS => {
			'expr' => 263,
			'sterm' => 71,
			'item' => 260,
			'param' => 261,
			'node' => 23,
			'ident' => 259,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 314
		ACTIONS => {
			'END' => 337
		}
	},
	{#State 315
		DEFAULT => -84
	},
	{#State 316
		DEFAULT => -92
	},
	{#State 317
		ACTIONS => {
			'END' => 338
		}
	},
	{#State 318
		DEFAULT => -81
	},
	{#State 319
		ACTIONS => {
			'END' => 339
		}
	},
	{#State 320
		ACTIONS => {
			";" => 340,
			'DEFAULT' => 342,
			"{" => 30,
			'LITERAL' => 81,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 43,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 37
		},
		GOTOS => {
			'sterm' => 71,
			'item' => 39,
			'node' => 23,
			'ident' => 80,
			'term' => 341,
			'lterm' => 58
		}
	},
	{#State 321
		ACTIONS => {
			'END' => 343
		}
	},
	{#State 322
		DEFAULT => -69
	},
	{#State 323
		ACTIONS => {
			'DIV' => 163,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166,
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'MOD' => 169,
			"/" => 170
		},
		DEFAULT => -147
	},
	{#State 324
		ACTIONS => {
			'END' => 344
		}
	},
	{#State 325
		ACTIONS => {
			'END' => 345
		}
	},
	{#State 326
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 346,
			'condition' => 76
		}
	},
	{#State 327
		DEFAULT => -47
	},
	{#State 328
		ACTIONS => {
			'CMPOP' => 168,
			"?" => 162,
			";" => 347,
			"+" => 161,
			'MOD' => 169,
			'DIV' => 163,
			"/" => 170,
			'AND' => 164,
			'CAT' => 167,
			'BINOP' => 165,
			'OR' => 166
		}
	},
	{#State 329
		ACTIONS => {
			"+" => 161,
			'CAT' => 167,
			'CMPOP' => 168,
			"?" => 162,
			'DIV' => 163,
			'MOD' => 169,
			"/" => 170,
			'AND' => 164,
			'BINOP' => 165,
			'OR' => 166
		},
		DEFAULT => -158
	},
	{#State 330
		DEFAULT => -75
	},
	{#State 331
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 348,
			'condition' => 76
		}
	},
	{#State 332
		ACTIONS => {
			'FINAL' => 266,
			'CATCH' => 268
		},
		DEFAULT => -76,
		GOTOS => {
			'final' => 349
		}
	},
	{#State 333
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 350,
			'condition' => 76
		}
	},
	{#State 334
		DEFAULT => -105
	},
	{#State 335
		DEFAULT => -97
	},
	{#State 336
		DEFAULT => -94
	},
	{#State 337
		DEFAULT => -58
	},
	{#State 338
		DEFAULT => -79
	},
	{#State 339
		DEFAULT => -45
	},
	{#State 340
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 351,
			'condition' => 76
		}
	},
	{#State 341
		ACTIONS => {
			";" => 352
		}
	},
	{#State 342
		ACTIONS => {
			";" => 353
		}
	},
	{#State 343
		DEFAULT => -52
	},
	{#State 344
		DEFAULT => -64
	},
	{#State 345
		DEFAULT => -61
	},
	{#State 346
		DEFAULT => -50
	},
	{#State 347
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 354,
			'condition' => 76
		}
	},
	{#State 348
		ACTIONS => {
			'FINAL' => 266,
			'CATCH' => 268
		},
		DEFAULT => -76,
		GOTOS => {
			'final' => 355
		}
	},
	{#State 349
		DEFAULT => -74
	},
	{#State 350
		ACTIONS => {
			'FINAL' => 266,
			'CATCH' => 268
		},
		DEFAULT => -76,
		GOTOS => {
			'final' => 356
		}
	},
	{#State 351
		DEFAULT => -55
	},
	{#State 352
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 357,
			'condition' => 76
		}
	},
	{#State 353
		ACTIONS => {
			'SET' => 1,
			'PERL' => 40,
			'NOT' => 38,
			'IDENT' => 2,
			'CLEAR' => 41,
			'UNLESS' => 3,
			'IF' => 44,
			"\$" => 43,
			'STOP' => 6,
			'CALL' => 45,
			'THROW' => 8,
			'GET' => 47,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 49,
			'DEBUG' => 51,
			'RAWPERL' => 13,
			'COMPONENT' => 53,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'BINDING' => 69,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 70,
			'BLOCK' => 28,
			'DEFAULT' => 72,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 37
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 39,
			'loop' => 4,
			'capture' => 42,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 46,
			'atomexpr' => 48,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 50,
			'defblockname' => 14,
			'bind' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 71,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'block' => 358,
			'condition' => 76
		}
	},
	{#State 354
		ACTIONS => {
			'ELSIF' => 297,
			'ELSE' => 295
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 359
		}
	},
	{#State 355
		DEFAULT => -72
	},
	{#State 356
		DEFAULT => -73
	},
	{#State 357
		ACTIONS => {
			'CASE' => 320
		},
		DEFAULT => -56,
		GOTOS => {
			'case' => 360
		}
	},
	{#State 358
		DEFAULT => -54
	},
	{#State 359
		DEFAULT => -49
	},
	{#State 360
		DEFAULT => -53
	}
];


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 64 "ProsperoParser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 67 "ProsperoParser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 68 "ProsperoParser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 71 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2])
                                        if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 73 "ProsperoParser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 76 "ProsperoParser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2,
sub
#line 77 "ProsperoParser.yp"
{ return '' unless $_[1];
                                      $_[0]->location() . $_[1];
                                    }
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1, undef
	],
	[#Rule 16
		 'statement', 1,
sub
#line 90 "ProsperoParser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 17
		 'statement', 2,
sub
#line 91 "ProsperoParser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 18
		 'statement', 0, undef
	],
	[#Rule 19
		 'directive', 1,
sub
#line 95 "ProsperoParser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'directive', 1, undef
	],
	[#Rule 27
		 'atomexpr', 1,
sub
#line 110 "ProsperoParser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 28
		 'atomexpr', 1, undef
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 114 "ProsperoParser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 115 "ProsperoParser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 116 "ProsperoParser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 117 "ProsperoParser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 118 "ProsperoParser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 119 "ProsperoParser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 120 "ProsperoParser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 36
		 'atomdir', 2,
sub
#line 121 "ProsperoParser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 122 "ProsperoParser.yp"
{ $factory->return()                  }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 123 "ProsperoParser.yp"
{ $factory->stop()                    }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 124 "ProsperoParser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 40
		 'atomdir', 1,
sub
#line 125 "ProsperoParser.yp"
{ $_[0]->block_label('last ', ';')    }
	],
	[#Rule 41
		 'atomdir', 1,
sub
#line 126 "ProsperoParser.yp"
{ $_[0]->in_block('FOR')
                                        ? $factory->next($_[0]->block_label)
                                        : $_[0]->block_label('next ', ';') }
	],
	[#Rule 42
		 'atomdir', 2,
sub
#line 129 "ProsperoParser.yp"
{ if ($_[2]->[0]->[0] =~ /^'(on|off)'$/) {
                                          $_[0]->{ DEBUG_DIRS } = ($1 eq 'on');
                                          $factory->debug($_[2]);
                                      }
                                      else {
                                          $_[0]->{ DEBUG_DIRS } ? $factory->debug($_[2]) : '';
                                      }
                                    }
	],
	[#Rule 43
		 'atomdir', 1, undef
	],
	[#Rule 44
		 'atomdir', 1, undef
	],
	[#Rule 45
		 'condition', 6,
sub
#line 142 "ProsperoParser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 46
		 'condition', 3,
sub
#line 143 "ProsperoParser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 47
		 'condition', 6,
sub
#line 145 "ProsperoParser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 48
		 'condition', 3,
sub
#line 146 "ProsperoParser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 49
		 'else', 5,
sub
#line 150 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
                                      $_[5];                              }
	],
	[#Rule 50
		 'else', 3,
sub
#line 152 "ProsperoParser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 51
		 'else', 0,
sub
#line 153 "ProsperoParser.yp"
{ [ undef ]                           }
	],
	[#Rule 52
		 'switch', 6,
sub
#line 157 "ProsperoParser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 53
		 'case', 5,
sub
#line 161 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
                                      $_[5];                              }
	],
	[#Rule 54
		 'case', 4,
sub
#line 163 "ProsperoParser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 55
		 'case', 3,
sub
#line 164 "ProsperoParser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 56
		 'case', 0,
sub
#line 165 "ProsperoParser.yp"
{ [ undef ]                           }
	],
	[#Rule 57
		 '@1-3', 0,
sub
#line 168 "ProsperoParser.yp"
{ $_[0]->enter_block('FOR')           }
	],
	[#Rule 58
		 'loop', 6,
sub
#line 169 "ProsperoParser.yp"
{ $factory->foreach(@{$_[2]}, $_[5], $_[0]->leave_block)  }
	],
	[#Rule 59
		 'loop', 3,
sub
#line 170 "ProsperoParser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 60
		 '@2-3', 0,
sub
#line 171 "ProsperoParser.yp"
{ $_[0]->enter_block('WHILE')         }
	],
	[#Rule 61
		 'loop', 6,
sub
#line 172 "ProsperoParser.yp"
{ $factory->while(@_[2, 5], $_[0]->leave_block) }
	],
	[#Rule 62
		 'loop', 3,
sub
#line 173 "ProsperoParser.yp"
{ $factory->while(@_[3, 1]) }
	],
	[#Rule 63
		 '@3-3', 0,
sub
#line 176 "ProsperoParser.yp"
{ $_[0]->enter_block('BIND')          }
	],
	[#Rule 64
		 'bind', 6,
sub
#line 177 "ProsperoParser.yp"
{ $factory->bind($_[2], $_[5], $_[0]->leave_block) }
	],
	[#Rule 65
		 'bind', 2,
sub
#line 178 "ProsperoParser.yp"
{ $factory->bind($_[2])               }
	],
	[#Rule 66
		 'loopvar', 4,
sub
#line 181 "ProsperoParser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 67
		 'loopvar', 4,
sub
#line 182 "ProsperoParser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 68
		 'loopvar', 2,
sub
#line 183 "ProsperoParser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 69
		 'wrapper', 5,
sub
#line 187 "ProsperoParser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 70
		 'wrapper', 3,
sub
#line 189 "ProsperoParser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 71
		 'try', 5,
sub
#line 193 "ProsperoParser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 72
		 'final', 5,
sub
#line 197 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
                                      $_[5];                              }
	],
	[#Rule 73
		 'final', 5,
sub
#line 200 "ProsperoParser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
                                      $_[5];                              }
	],
	[#Rule 74
		 'final', 4,
sub
#line 203 "ProsperoParser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
                                      $_[4];                              }
	],
	[#Rule 75
		 'final', 3,
sub
#line 205 "ProsperoParser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 76
		 'final', 0,
sub
#line 206 "ProsperoParser.yp"
{ [ 0 ] }
	],
	[#Rule 77
		 'use', 2,
sub
#line 209 "ProsperoParser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 78
		 '@4-3', 0,
sub
#line 212 "ProsperoParser.yp"
{ $_[0]->push_defblock();             }
	],
	[#Rule 79
		 'view', 6,
sub
#line 213 "ProsperoParser.yp"
{ $factory->view(@_[2,5],
                                                     $_[0]->pop_defblock) }
	],
	[#Rule 80
		 '@5-2', 0,
sub
#line 217 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 81
		 'perl', 5,
sub
#line 218 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL }
                                      ? $factory->perl($_[4])
                                      : $factory->no_perl();              }
	],
	[#Rule 82
		 '@6-1', 0,
sub
#line 224 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}++;
                                      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 83
		 'rawperl', 5,
sub
#line 226 "ProsperoParser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL }
                                      ? $factory->rawperl($_[4], $rawstart)
                                      : $factory->no_perl();              }
	],
	[#Rule 84
		 'filter', 5,
sub
#line 233 "ProsperoParser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 85
		 'filter', 3,
sub
#line 235 "ProsperoParser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 86
		 'defblock', 5,
sub
#line 240 "ProsperoParser.yp"
{ my $name = join('/', @{ $_[0]->{ DEFBLOCKS } });
                                      pop(@{ $_[0]->{ DEFBLOCKS } });
                                      $_[0]->define_block($name, $_[4]);
                                      undef
                                    }
	],
	[#Rule 87
		 'defblockname', 2,
sub
#line 247 "ProsperoParser.yp"
{ push(@{ $_[0]->{ DEFBLOCKS } }, $_[2]);
                                      $_[2];
                                    }
	],
	[#Rule 88
		 'blockname', 1, undef
	],
	[#Rule 89
		 'blockname', 1,
sub
#line 253 "ProsperoParser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 90
		 'blockargs', 1, undef
	],
	[#Rule 91
		 'blockargs', 0, undef
	],
	[#Rule 92
		 'anonblock', 5,
sub
#line 261 "ProsperoParser.yp"
{ local $" = ', ';
                                      print STDERR "experimental block args: [@{ $_[2] }]\n"
                                          if $_[2];
                                      $factory->anon_block($_[4])         }
	],
	[#Rule 93
		 'capture', 3,
sub
#line 267 "ProsperoParser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 94
		 'macro', 6,
sub
#line 271 "ProsperoParser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 95
		 'macro', 3,
sub
#line 272 "ProsperoParser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 96
		 'mdir', 1, undef
	],
	[#Rule 97
		 'mdir', 4,
sub
#line 276 "ProsperoParser.yp"
{ $_[3]                               }
	],
	[#Rule 98
		 'margs', 2,
sub
#line 279 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 99
		 'margs', 2,
sub
#line 280 "ProsperoParser.yp"
{ $_[1]                               }
	],
	[#Rule 100
		 'margs', 1,
sub
#line 281 "ProsperoParser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 101
		 'metadata', 2,
sub
#line 284 "ProsperoParser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 102
		 'metadata', 2, undef
	],
	[#Rule 103
		 'metadata', 1, undef
	],
	[#Rule 104
		 'meta', 3,
sub
#line 289 "ProsperoParser.yp"
{ for ($_[3]) { s/^'//; s/'$//;
                                                       s/\\'/'/g  };
                                         [ @_[1,3] ] }
	],
	[#Rule 105
		 'meta', 5,
sub
#line 292 "ProsperoParser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 106
		 'meta', 3,
sub
#line 293 "ProsperoParser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 107
		 'term', 1, undef
	],
	[#Rule 108
		 'term', 1, undef
	],
	[#Rule 109
		 'lterm', 3,
sub
#line 305 "ProsperoParser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 110
		 'lterm', 3,
sub
#line 306 "ProsperoParser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 111
		 'lterm', 2,
sub
#line 307 "ProsperoParser.yp"
{ "[ ]"                               }
	],
	[#Rule 112
		 'lterm', 3,
sub
#line 308 "ProsperoParser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 113
		 'sterm', 1,
sub
#line 311 "ProsperoParser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 114
		 'sterm', 2,
sub
#line 312 "ProsperoParser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 115
		 'sterm', 3,
sub
#line 313 "ProsperoParser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 116
		 'sterm', 1, undef
	],
	[#Rule 117
		 'sterm', 1, undef
	],
	[#Rule 118
		 'list', 2,
sub
#line 318 "ProsperoParser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 119
		 'list', 2, undef
	],
	[#Rule 120
		 'list', 1, undef
	],
	[#Rule 121
		 'range', 3,
sub
#line 323 "ProsperoParser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 122
		 'hash', 1, undef
	],
	[#Rule 123
		 'hash', 0,
sub
#line 328 "ProsperoParser.yp"
{ "" }
	],
	[#Rule 124
		 'params', 2,
sub
#line 331 "ProsperoParser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 125
		 'params', 2, undef
	],
	[#Rule 126
		 'params', 1, undef
	],
	[#Rule 127
		 'param', 3,
sub
#line 336 "ProsperoParser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 128
		 'param', 3,
sub
#line 337 "ProsperoParser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 129
		 'ident', 3,
sub
#line 340 "ProsperoParser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 130
		 'ident', 3,
sub
#line 341 "ProsperoParser.yp"
{ push(@{$_[1]},
                                           map {($_, 0)} split(/\./, $_[3]));
                                      $_[1];                              }
	],
	[#Rule 131
		 'ident', 1, undef
	],
	[#Rule 132
		 'node', 1,
sub
#line 347 "ProsperoParser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 133
		 'node', 4,
sub
#line 348 "ProsperoParser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 134
		 'item', 1,
sub
#line 351 "ProsperoParser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 135
		 'item', 3,
sub
#line 352 "ProsperoParser.yp"
{ $_[2]                               }
	],
	[#Rule 136
		 'item', 2,
sub
#line 353 "ProsperoParser.yp"
{ $_[0]->{ V1DOLLAR }
                                       ? "'$_[2]'"
                                       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 137
		 'expr', 3,
sub
#line 358 "ProsperoParser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 138
		 'expr', 3,
sub
#line 359 "ProsperoParser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 139
		 'expr', 3,
sub
#line 360 "ProsperoParser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 140
		 'expr', 3,
sub
#line 361 "ProsperoParser.yp"
{ "int($_[1] / $_[3])"                }
	],
	[#Rule 141
		 'expr', 3,
sub
#line 362 "ProsperoParser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 142
		 'expr', 3,
sub
#line 363 "ProsperoParser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 143
		 'expr', 3,
sub
#line 364 "ProsperoParser.yp"
{ "$_[1]  . $_[3]"                    }
	],
	[#Rule 144
		 'expr', 3,
sub
#line 365 "ProsperoParser.yp"
{ "$_[1] && $_[3]"                    }
	],
	[#Rule 145
		 'expr', 3,
sub
#line 366 "ProsperoParser.yp"
{ "$_[1] || $_[3]"                    }
	],
	[#Rule 146
		 'expr', 2,
sub
#line 367 "ProsperoParser.yp"
{ "! $_[2]"                           }
	],
	[#Rule 147
		 'expr', 5,
sub
#line 368 "ProsperoParser.yp"
{ "$_[1] ? $_[3] : $_[5]"             }
	],
	[#Rule 148
		 'expr', 3,
sub
#line 369 "ProsperoParser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 149
		 'expr', 3,
sub
#line 370 "ProsperoParser.yp"
{ "($_[2])"                           }
	],
	[#Rule 150
		 'expr', 1, undef
	],
	[#Rule 151
		 'setlist', 2,
sub
#line 374 "ProsperoParser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 152
		 'setlist', 2, undef
	],
	[#Rule 153
		 'setlist', 1, undef
	],
	[#Rule 154
		 'assign', 3,
sub
#line 380 "ProsperoParser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 155
		 'assign', 3,
sub
#line 381 "ProsperoParser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 156
		 'args', 2,
sub
#line 388 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 157
		 'args', 2,
sub
#line 389 "ProsperoParser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 158
		 'args', 4,
sub
#line 390 "ProsperoParser.yp"
{ push(@{$_[1]->[0]}, "'', " .
                                      $factory->assign(@_[2,4])); $_[1]  }
	],
	[#Rule 159
		 'args', 2,
sub
#line 392 "ProsperoParser.yp"
{ $_[1]                               }
	],
	[#Rule 160
		 'args', 0,
sub
#line 393 "ProsperoParser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 161
		 'lnameargs', 3,
sub
#line 403 "ProsperoParser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 162
		 'lnameargs', 1, undef
	],
	[#Rule 163
		 'lvalue', 1, undef
	],
	[#Rule 164
		 'lvalue', 3,
sub
#line 408 "ProsperoParser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 165
		 'lvalue', 1, undef
	],
	[#Rule 166
		 'nameargs', 3,
sub
#line 412 "ProsperoParser.yp"
{ [ [$factory->ident($_[2])], $_[3] ]   }
	],
	[#Rule 167
		 'nameargs', 2,
sub
#line 413 "ProsperoParser.yp"
{ [ @_[1,2] ] }
	],
	[#Rule 168
		 'nameargs', 4,
sub
#line 414 "ProsperoParser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 169
		 'names', 3,
sub
#line 417 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[3]); $_[1] }
	],
	[#Rule 170
		 'names', 1,
sub
#line 418 "ProsperoParser.yp"
{ [ $_[1] ]                    }
	],
	[#Rule 171
		 'name', 3,
sub
#line 421 "ProsperoParser.yp"
{ $factory->quoted($_[2])  }
	],
	[#Rule 172
		 'name', 1,
sub
#line 422 "ProsperoParser.yp"
{ "'$_[1]'" }
	],
	[#Rule 173
		 'name', 1, undef
	],
	[#Rule 174
		 'filename', 3,
sub
#line 426 "ProsperoParser.yp"
{ "$_[1].$_[3]" }
	],
	[#Rule 175
		 'filename', 1, undef
	],
	[#Rule 176
		 'filepart', 1, undef
	],
	[#Rule 177
		 'filepart', 1, undef
	],
	[#Rule 178
		 'filepart', 1, undef
	],
	[#Rule 179
		 'quoted', 2,
sub
#line 440 "ProsperoParser.yp"
{ push(@{$_[1]}, $_[2])
                                          if defined $_[2]; $_[1]         }
	],
	[#Rule 180
		 'quoted', 0,
sub
#line 442 "ProsperoParser.yp"
{ [ ]                                 }
	],
	[#Rule 181
		 'quotable', 1,
sub
#line 445 "ProsperoParser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 182
		 'quotable', 1,
sub
#line 446 "ProsperoParser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 183
		 'quotable', 1,
sub
#line 447 "ProsperoParser.yp"
{ undef                               }
	]
];



1;

__END__

=head1 NAME

Template::Grammar - Parser state/rule tables for the TT grammar

=head1 SYNOPSIS

    # no user serviceable parts inside

=head1 DESCRIPTION

This module defines the state and rule tables that the L<Template::Parser>
module uses to parse templates.  It is generated from a YACC-like grammar
using the C<Parse::Yapp> module.  The F<parser> sub-directory of the
Template Toolkit source distribution contains the grammar and other
files required to generate this module.

But you don't need to worry about any of that unless you're planning to
modify the Template Toolkit language.

=head1 AUTHOR

Andy Wardley E<lt>abw@wardley.orgE<gt>

L<http://wardley.org/>

=head1 COPYRIGHT

Copyright (C) 1996-2007 Andy Wardley.  All Rights Reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 SEE ALSO

L<Template::Parser>

=cut

# Local Variables:
# mode: perl
# perl-indent-level: 4
# indent-tabs-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:










